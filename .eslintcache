[{"C:\\Users\\pabinlimbu\\Documents\\personal-projects\\mnm\\mnm-frontend-admin\\src\\index.js":"1","C:\\Users\\pabinlimbu\\Documents\\personal-projects\\mnm\\mnm-frontend-admin\\src\\reportWebVitals.js":"2","C:\\Users\\pabinlimbu\\Documents\\personal-projects\\mnm\\mnm-frontend-admin\\src\\App.js":"3","C:\\Users\\pabinlimbu\\Documents\\personal-projects\\mnm\\mnm-frontend-admin\\src\\store\\store.js":"4","C:\\Users\\pabinlimbu\\Documents\\personal-projects\\mnm\\mnm-frontend-admin\\src\\store\\actions\\auth.actons.js":"5","C:\\Users\\pabinlimbu\\Documents\\personal-projects\\mnm\\mnm-frontend-admin\\src\\container\\home\\home.js":"6","C:\\Users\\pabinlimbu\\Documents\\personal-projects\\mnm\\mnm-frontend-admin\\src\\container\\signup\\signup.js":"7","C:\\Users\\pabinlimbu\\Documents\\personal-projects\\mnm\\mnm-frontend-admin\\src\\components\\HOC\\privateRoute.js":"8","C:\\Users\\pabinlimbu\\Documents\\personal-projects\\mnm\\mnm-frontend-admin\\src\\container\\signin\\signin.js":"9","C:\\Users\\pabinlimbu\\Documents\\personal-projects\\mnm\\mnm-frontend-admin\\src\\store\\reducers\\rootReducer.js":"10","C:\\Users\\pabinlimbu\\Documents\\personal-projects\\mnm\\mnm-frontend-admin\\src\\store\\actions\\constaints.js":"11","C:\\Users\\pabinlimbu\\Documents\\personal-projects\\mnm\\mnm-frontend-admin\\src\\helper\\axios.js":"12","C:\\Users\\pabinlimbu\\Documents\\personal-projects\\mnm\\mnm-frontend-admin\\src\\store\\reducers\\user.reducer.js":"13","C:\\Users\\pabinlimbu\\Documents\\personal-projects\\mnm\\mnm-frontend-admin\\src\\store\\actions\\user.actions.js":"14","C:\\Users\\pabinlimbu\\Documents\\personal-projects\\mnm\\mnm-frontend-admin\\src\\store\\reducers\\auth.reducers.js":"15","C:\\Users\\pabinlimbu\\Documents\\personal-projects\\mnm\\mnm-frontend-admin\\src\\components\\layout\\layout.js":"16","C:\\Users\\pabinlimbu\\Documents\\personal-projects\\mnm\\mnm-frontend-admin\\src\\components\\ui\\input\\input.js":"17","C:\\Users\\pabinlimbu\\Documents\\personal-projects\\mnm\\mnm-frontend-admin\\src\\urlConfig.js":"18","C:\\Users\\pabinlimbu\\Documents\\personal-projects\\mnm\\mnm-frontend-admin\\src\\components\\header\\header.js":"19","C:\\Users\\pabinlimbu\\Documents\\personal-projects\\mnm\\mnm-frontend-admin\\src\\container\\Category\\index.js":"20","C:\\Users\\pabinlimbu\\Documents\\personal-projects\\mnm\\mnm-frontend-admin\\src\\components\\ui\\modal\\index.js":"21","C:\\Users\\pabinlimbu\\Documents\\personal-projects\\mnm\\mnm-frontend-admin\\src\\store\\actions\\index.js":"22","C:\\Users\\pabinlimbu\\Documents\\personal-projects\\mnm\\mnm-frontend-admin\\src\\store\\actions\\initialData.actions.js":"23","C:\\Users\\pabinlimbu\\Documents\\personal-projects\\mnm\\mnm-frontend-admin\\src\\store\\reducers\\category.reducers.js":"24","C:\\Users\\pabinlimbu\\Documents\\personal-projects\\mnm\\mnm-frontend-admin\\src\\store\\actions\\category.action.js":"25","C:\\Users\\pabinlimbu\\Documents\\personal-projects\\mnm\\mnm-frontend-admin\\src\\container\\Product\\index.js":"26","C:\\Users\\pabinlimbu\\Documents\\personal-projects\\mnm\\mnm-frontend-admin\\src\\store\\reducers\\product.reducers.js":"27","C:\\Users\\pabinlimbu\\Documents\\personal-projects\\mnm\\mnm-frontend-admin\\src\\store\\actions\\product.actions.js":"28","C:\\Users\\pabinlimbu\\Documents\\personal-projects\\mnm\\mnm-frontend-admin\\src\\container\\Category\\components\\updateCategoriesModal.js":"29","C:\\Users\\pabinlimbu\\Documents\\personal-projects\\mnm\\mnm-frontend-admin\\src\\container\\Category\\components\\UpdateCategoriesModal.js":"30","C:\\Users\\pabinlimbu\\Documents\\personal-projects\\mnm\\mnm-frontend-admin\\src\\container\\Category\\components\\AddCategoryModal.js":"31","C:\\Users\\pabinlimbu\\Documents\\personal-projects\\mnm\\mnm-frontend-admin\\src\\container\\Category\\components\\DeleteCategoryModal.js":"32","C:\\Users\\pabinlimbu\\Documents\\personal-projects\\mnm\\mnm-frontend-admin\\src\\container\\NewPage\\index.js":"33","C:\\Users\\pabinlimbu\\Documents\\personal-projects\\mnm\\mnm-frontend-admin\\src\\components\\ui\\modal\\MyModal.js":"34","C:\\Users\\pabinlimbu\\Documents\\personal-projects\\mnm\\mnm-frontend-admin\\src\\helper\\LinearCategories.js":"35","C:\\Users\\pabinlimbu\\Documents\\personal-projects\\mnm\\mnm-frontend-admin\\src\\store\\actions\\page.actions.js":"36","C:\\Users\\pabinlimbu\\Documents\\personal-projects\\mnm\\mnm-frontend-admin\\src\\store\\reducers\\page.reducer.js":"37","C:\\Users\\pabinlimbu\\Documents\\personal-projects\\mnm\\mnm-frontend-admin\\src\\container\\Product\\components\\EditProductModal.js":"38","C:\\Users\\pabinlimbu\\Documents\\personal-projects\\mnm\\mnm-frontend-admin\\src\\container\\Product\\components\\ProductDetailsModal.js":"39","C:\\Users\\pabinlimbu\\Documents\\personal-projects\\mnm\\mnm-frontend-admin\\src\\container\\Banner\\index.js":"40","C:\\Users\\pabinlimbu\\Documents\\personal-projects\\mnm\\mnm-frontend-admin\\src\\store\\actions\\banner.actions.js":"41","C:\\Users\\pabinlimbu\\Documents\\personal-projects\\mnm\\mnm-frontend-admin\\src\\store\\reducers\\banner.reducers.js":"42","C:\\Users\\pabinlimbu\\Documents\\personal-projects\\mnm\\mnm-frontend-admin\\src\\container\\Banner\\components\\BannerDetailsModal.js":"43","C:\\Users\\pabinlimbu\\Documents\\personal-projects\\mnm\\mnm-frontend-admin\\src\\container\\UserComments\\index.js":"44","C:\\Users\\pabinlimbu\\Documents\\personal-projects\\mnm\\mnm-frontend-admin\\src\\store\\actions\\usercomment.action.js":"45","C:\\Users\\pabinlimbu\\Documents\\personal-projects\\mnm\\mnm-frontend-admin\\src\\store\\reducers\\usercomment.reducers.js":"46"},{"size":847,"mtime":1647446545508,"results":"47","hashOfConfig":"48"},{"size":375,"mtime":1611799130994,"results":"49","hashOfConfig":"48"},{"size":2415,"mtime":1647446547402,"results":"50","hashOfConfig":"48"},{"size":327,"mtime":1620979977716,"results":"51","hashOfConfig":"48"},{"size":1790,"mtime":1612343488450,"results":"52","hashOfConfig":"48"},{"size":283,"mtime":1612348477370,"results":"53","hashOfConfig":"48"},{"size":3090,"mtime":1611799130993,"results":"54","hashOfConfig":"48"},{"size":942,"mtime":1612423776333,"results":"55","hashOfConfig":"48"},{"size":1998,"mtime":1611799130992,"results":"56","hashOfConfig":"48"},{"size":643,"mtime":1647415921889,"results":"57","hashOfConfig":"48"},{"size":2639,"mtime":1647415411182,"results":"58","hashOfConfig":"48"},{"size":1224,"mtime":1640932769562,"results":"59","hashOfConfig":"48"},{"size":699,"mtime":1611799130997,"results":"60","hashOfConfig":"48"},{"size":705,"mtime":1611799130996,"results":"61","hashOfConfig":"48"},{"size":1090,"mtime":1612347375651,"results":"62","hashOfConfig":"48"},{"size":1414,"mtime":1647336101836,"results":"63","hashOfConfig":"48"},{"size":2988,"mtime":1647337942786,"results":"64","hashOfConfig":"48"},{"size":412,"mtime":1640933193877,"results":"65","hashOfConfig":"48"},{"size":1703,"mtime":1612343215348,"results":"66","hashOfConfig":"48"},{"size":11850,"mtime":1647412633526,"results":"67","hashOfConfig":"48"},{"size":1014,"mtime":1620979858825,"results":"68","hashOfConfig":"48"},{"size":214,"mtime":1647415252695,"results":"69","hashOfConfig":"48"},{"size":764,"mtime":1620148565638,"results":"70","hashOfConfig":"48"},{"size":3080,"mtime":1631425368595,"results":"71","hashOfConfig":"48"},{"size":2718,"mtime":1627725353205,"results":"72","hashOfConfig":"48"},{"size":9387,"mtime":1647162913390,"results":"73","hashOfConfig":"48"},{"size":341,"mtime":1612859828232,"results":"74","hashOfConfig":"48"},{"size":824,"mtime":1647163100266,"results":"75","hashOfConfig":"48"},{"size":5240,"mtime":1620635115032,"results":"76","hashOfConfig":"48"},{"size":6649,"mtime":1627802066602,"results":"77","hashOfConfig":"48"},{"size":1654,"mtime":1620907259401,"results":"78","hashOfConfig":"48"},{"size":1143,"mtime":1620647351313,"results":"79","hashOfConfig":"48"},{"size":5490,"mtime":1621342988042,"results":"80","hashOfConfig":"48"},{"size":1083,"mtime":1621068851800,"results":"81","hashOfConfig":"48"},{"size":509,"mtime":1621157608759,"results":"82","hashOfConfig":"48"},{"size":684,"mtime":1621248493752,"results":"83","hashOfConfig":"48"},{"size":610,"mtime":1621328543447,"results":"84","hashOfConfig":"48"},{"size":2291,"mtime":1646548728808,"results":"85","hashOfConfig":"48"},{"size":2303,"mtime":1646727513474,"results":"86","hashOfConfig":"48"},{"size":8696,"mtime":1646991540195,"results":"87","hashOfConfig":"48"},{"size":1054,"mtime":1647152097832,"results":"88","hashOfConfig":"48"},{"size":345,"mtime":1646723341434,"results":"89","hashOfConfig":"48"},{"size":1334,"mtime":1646990744087,"results":"90","hashOfConfig":"48"},{"size":4358,"mtime":1647447261550,"results":"91","hashOfConfig":"48"},{"size":1444,"mtime":1647447452247,"results":"92","hashOfConfig":"48"},{"size":358,"mtime":1647416258091,"results":"93","hashOfConfig":"48"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},"134qi13",{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"96"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"96"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"96"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"96"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"96"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"96"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"96"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"96"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"96"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"96"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"96"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"165","messages":"166","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"96"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"96"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"183","usedDeprecatedRules":"96"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"190","usedDeprecatedRules":"96"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"195","usedDeprecatedRules":"96"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"200","usedDeprecatedRules":"96"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"203","usedDeprecatedRules":"96"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"206","usedDeprecatedRules":"96"},"C:\\Users\\pabinlimbu\\Documents\\personal-projects\\mnm\\mnm-frontend-admin\\src\\index.js",[],["207","208"],"C:\\Users\\pabinlimbu\\Documents\\personal-projects\\mnm\\mnm-frontend-admin\\src\\reportWebVitals.js",[],"C:\\Users\\pabinlimbu\\Documents\\personal-projects\\mnm\\mnm-frontend-admin\\src\\App.js",["209"],"import React, { useEffect } from \"react\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport \"./App.css\";\r\nimport home from \"./container/home/home\";\r\nimport Signin from \"./container/signin/signin\";\r\nimport Signup from \"./container/signup/signup\";\r\nimport PrivateRoute from \"./components/HOC/privateRoute\";\r\nimport Category from \"./container/Category\";\r\nimport Product from \"./container/Product\";\r\nimport NewPage from \"./container/NewPage\";\r\nimport Banner from \"./container/Banner\";\r\nimport UserComments from \"./container/UserComments\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { isUserLogedIn } from \"./store/actions/auth.actons\";\r\nimport { getInitialData } from \"./store/actions\";\r\nfunction App() {\r\n  const dispatch = useDispatch();\r\n  const auth = useSelector((state) => state.auth);\r\n  /**simillar to componentdidmount\r\n   * use effect trigget isUserLgedin fucntion --> which further trigger LOGIN_SUCCESS action if token is found in localstoreage.\r\n   * when LOGIN_SUCCESS action is erceived by reducer it sets the token and user to reduc store\r\n   * and also sets the authenticate : true even after the refresh of the page.\r\n   * The redirect function is kept signin and sign up compoent and to prevent the blink glitch\r\n   * we directly use the useeffect in root component. because root render all component.\r\n   * after page refresh the store value is also sets to initial state so to set the user token and user obj the login success is triggered again using the localstorage value.\r\n   */\r\n  useEffect(() => {\r\n    if (!auth.authenticate) {\r\n      dispatch(isUserLogedIn());\r\n    }\r\n    if (auth.authenticate) {\r\n      dispatch(getInitialData());\r\n    }\r\n  }, [auth.authenticate]);\r\n  return (\r\n    <div className=\"App\">\r\n      <Router>\r\n        <Switch>\r\n          <PrivateRoute exact path=\"/\" component={home} />\r\n          <PrivateRoute exact path=\"/page\" component={NewPage} />\r\n          <PrivateRoute path=\"/category\" component={Category} />\r\n          <PrivateRoute path=\"/products\" component={Product} />\r\n          <PrivateRoute path=\"/banner\" component={Banner} />\r\n          <PrivateRoute path=\"/comments\" component={UserComments} />\r\n          <Route exact path=\"/signin\" component={Signin} />\r\n          <Route exact path=\"/signup\" component={Signup} />\r\n        </Switch>\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\pabinlimbu\\Documents\\personal-projects\\mnm\\mnm-frontend-admin\\src\\store\\store.js",[],"C:\\Users\\pabinlimbu\\Documents\\personal-projects\\mnm\\mnm-frontend-admin\\src\\store\\actions\\auth.actons.js",[],"C:\\Users\\pabinlimbu\\Documents\\personal-projects\\mnm\\mnm-frontend-admin\\src\\container\\home\\home.js",["210"],"import React from \"react\";\r\nimport Layout from \"../../components/layout/layout\";\r\nimport { Jumbotron } from \"react-bootstrap\";\r\n\r\nconst home = () => {\r\n  return (\r\n    <div>\r\n      <Layout sidebar>\r\n        <p>Home</p>\r\n      </Layout>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default home;\r\n","C:\\Users\\pabinlimbu\\Documents\\personal-projects\\mnm\\mnm-frontend-admin\\src\\container\\signup\\signup.js",["211","212"],"import React, { useState } from \"react\";\r\nimport { Container, Form, Row, Col, Button } from \"react-bootstrap\";\r\nimport Layout from \"../../components/layout/layout\";\r\nimport Input from \"../../components/ui/input/input\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { signup } from \"../../store/actions/user.actions\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nfunction Signup() {\r\n  const [firstName, setFirstName] = useState(\"\");\r\n  const [lastName, setLastName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  const auth = useSelector((state) => state.auth); //fetch state.auth as state from store.\r\n  const user = useSelector((state) => state.user); //this user is a reducer name in root reducer.\r\n\r\n  const dispatch = useDispatch();\r\n  const userSignUp = (e) => {\r\n    e.preventDefault();\r\n    const user = { firstName, lastName, email, password };\r\n    dispatch(signup(user));\r\n  };\r\n\r\n  if (user.loading) {\r\n    return <p>loading...</p>;\r\n  }\r\n  //if user is loged in redirect to dashboard\r\n  if (auth.authenticate) {\r\n    return <Redirect to={\"/\"} />;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Layout>\r\n        <Container>\r\n          <Row style={{ marginTop: \"60px\" }}>\r\n            <Col md={{ span: 6, offset: 3 }}>\r\n              <Form onSubmit={userSignUp}>\r\n                <Row>\r\n                  <Col md={6}>\r\n                    <Input\r\n                      label=\"First Name\"\r\n                      placeholder=\"First Name\"\r\n                      value={firstName}\r\n                      type=\"text\"\r\n                      onChange={(e) => {\r\n                        setFirstName(e.target.value);\r\n                      }}\r\n                    />\r\n                  </Col>\r\n                  <Col md={6}>\r\n                    <Input\r\n                      label=\"Last Name\"\r\n                      placeholder=\"Last Name\"\r\n                      value={lastName}\r\n                      type=\"text\"\r\n                      onChange={(e) => {\r\n                        setLastName(e.target.value);\r\n                      }}\r\n                    />\r\n                  </Col>\r\n                </Row>\r\n                <Input\r\n                  label=\"Email\"\r\n                  placeholder=\"Email\"\r\n                  value={email}\r\n                  type=\"Email\"\r\n                  onChange={(e) => {\r\n                    setEmail(e.target.value);\r\n                  }}\r\n                />\r\n\r\n                <Input\r\n                  label=\"Password\"\r\n                  placeholder=\"Password\"\r\n                  value={password}\r\n                  type=\"Password\"\r\n                  onChange={(e) => {\r\n                    setPassword(e.target.value);\r\n                  }}\r\n                />\r\n\r\n                <Button variant=\"primary\" type=\"submit\">\r\n                  Submit\r\n                </Button>\r\n              </Form>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </Layout>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Signup;\r\n","C:\\Users\\pabinlimbu\\Documents\\personal-projects\\mnm\\mnm-frontend-admin\\src\\components\\HOC\\privateRoute.js",[],"C:\\Users\\pabinlimbu\\Documents\\personal-projects\\mnm\\mnm-frontend-admin\\src\\container\\signin\\signin.js",[],"C:\\Users\\pabinlimbu\\Documents\\personal-projects\\mnm\\mnm-frontend-admin\\src\\store\\reducers\\rootReducer.js",[],"C:\\Users\\pabinlimbu\\Documents\\personal-projects\\mnm\\mnm-frontend-admin\\src\\store\\actions\\constaints.js",[],"C:\\Users\\pabinlimbu\\Documents\\personal-projects\\mnm\\mnm-frontend-admin\\src\\helper\\axios.js",[],"C:\\Users\\pabinlimbu\\Documents\\personal-projects\\mnm\\mnm-frontend-admin\\src\\store\\reducers\\user.reducer.js",["213","214"],"import { userConstants } from \"../actions/constaints\";\r\n\r\nconst initState = { error: null, message: \"\", loading: false };\r\nexport default (state = initState, action) => {\r\n  switch (action.type) {\r\n    case userConstants.USER_REGISTER_REQUEST:\r\n      state = {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n      break;\r\n    case userConstants.USER_REGISTER_SUCCESS:\r\n      state = {\r\n        ...state,\r\n        loading: false,\r\n        message: action.payload.message,\r\n      };\r\n      break;\r\n    case userConstants.USER_REGISTER_FAILURE:\r\n      state = {\r\n        ...state,\r\n        loading: false,\r\n        error: action.payload.error,\r\n      };\r\n      break;\r\n  }\r\n  return state;\r\n};\r\n","C:\\Users\\pabinlimbu\\Documents\\personal-projects\\mnm\\mnm-frontend-admin\\src\\store\\actions\\user.actions.js",[],"C:\\Users\\pabinlimbu\\Documents\\personal-projects\\mnm\\mnm-frontend-admin\\src\\store\\reducers\\auth.reducers.js",["215","216"],"import { authConstants } from \"../actions/constaints\";\r\nconst initState = {\r\n  token: null,\r\n  user: { firstName: \"\", lastName: \"\", email: \"\", picture: \"\" },\r\n  authenticate: false,\r\n  authenticating: false,\r\n  loading: false,\r\n};\r\n\r\nexport default (state = initState, action) => {\r\n  console.log(action);\r\n  switch (action.type) {\r\n    case authConstants.LOGIN_REQUEST:\r\n      state = { ...state, authenticating: true };\r\n      break;\r\n    case authConstants.LOGIN_SUCCESS:\r\n      state = {\r\n        ...state,\r\n        user: action.payload.user,\r\n        token: action.payload.token,\r\n        authenticate: true,\r\n        authenticating: false,\r\n      };\r\n      break;\r\n\r\n    case authConstants.LOGOUT_REQUEST:\r\n      state = {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n      break;\r\n    case authConstants.LOGOUT_SUCCESS:\r\n      state = {\r\n        ...initState,\r\n      };\r\n      break;\r\n    case authConstants.LOGOUT_FAILURE:\r\n      state = {\r\n        ...state,\r\n        error: action.payload.error,\r\n        loading: false,\r\n      };\r\n      break;\r\n  }\r\n  return state;\r\n};\r\n","C:\\Users\\pabinlimbu\\Documents\\personal-projects\\mnm\\mnm-frontend-admin\\src\\components\\layout\\layout.js",[],"C:\\Users\\pabinlimbu\\Documents\\personal-projects\\mnm\\mnm-frontend-admin\\src\\components\\ui\\input\\input.js",["217"],"import { FloatingLabel, Form } from \"react-bootstrap\";\r\nimport React from \"react\";\r\n\r\nconst Input = (props) => {\r\n  let input = null;\r\n  switch (props.type) {\r\n    case \"select\":\r\n      input = (\r\n        <Form.Group controlId=\"\">\r\n          {props.label && <Form.Label>{props.label}</Form.Label>}\r\n\r\n          <select\r\n            className=\"form-control form-control-sm\"\r\n            name=\"\"\r\n            id=\"\"\r\n            value={props.value}\r\n            onChange={props.onChange}\r\n          >\r\n            <option\r\n              value={\r\n                props.currentProduct ? props.currentProduct.category._id : \"\"\r\n              }\r\n            >\r\n              {props.currentProduct\r\n                ? props.currentProduct.category.name\r\n                : props.placeholder}\r\n            </option>\r\n            {props.options.length > 0\r\n              ? props.options.map((option, index) => (\r\n                  <option key={index} value={option._id}>\r\n                    {option.name}\r\n                  </option>\r\n                ))\r\n              : null}\r\n          </select>\r\n        </Form.Group>\r\n      );\r\n      break;\r\n    case \"text\":\r\n      break;\r\n    case \"check\":\r\n      input = (\r\n        <Form.Group className=\"mb-3\" controlId=\"formBasicCheckbox\">\r\n          <Form.Check\r\n            type=\"checkbox\"\r\n            label={props.label}\r\n            checked={props.value}\r\n            onChange={props.onChange}\r\n          />\r\n        </Form.Group>\r\n      );\r\n      break;\r\n    case \"textArea\":\r\n      input = (\r\n        <Form.Group controlId=\"\">\r\n          {props.label && <Form.Label>{props.label}</Form.Label>}\r\n          <Form.Text className=\"text-muted\">{props.errorMessage}</Form.Text>\r\n          <Form.Control\r\n            as=\"textarea\"\r\n            placeholder={props.placeholder}\r\n            style={{ height: \"100px\" }}\r\n            value={props.value}\r\n            onChange={props.onChange}\r\n          />\r\n        </Form.Group>\r\n      );\r\n      break;\r\n\r\n    default:\r\n      input = (\r\n        <Form.Group controlId=\"\">\r\n          {props.label && <Form.Label>{props.label}</Form.Label>}\r\n\r\n          <Form.Control\r\n            type={props.type}\r\n            placeholder={props.placeholder}\r\n            value={props.value}\r\n            onChange={props.onChange}\r\n            {...props}\r\n          />\r\n          <Form.Text className=\"text-muted\">{props.errorMessage}</Form.Text>\r\n        </Form.Group>\r\n      );\r\n      break;\r\n  }\r\n\r\n  // return (\r\n  //   <div>\r\n  //     <Form.Group controlId=\"\">\r\n  //       {props.label && <Form.Label>{props.label}</Form.Label>}\r\n\r\n  //       <Form.Control\r\n  //         type={props.type}\r\n  //         placeholder={props.placeholder}\r\n  //         value={props.value}\r\n  //         onChange={props.onChange}\r\n  //         {...props}\r\n  //       />\r\n  //       <Form.Text className=\"text-muted\">{props.errorMessage}</Form.Text>\r\n  //     </Form.Group>\r\n  //   </div>\r\n  // );\r\n  return input;\r\n};\r\n\r\nexport default Input;\r\n","C:\\Users\\pabinlimbu\\Documents\\personal-projects\\mnm\\mnm-frontend-admin\\src\\urlConfig.js",[],"C:\\Users\\pabinlimbu\\Documents\\personal-projects\\mnm\\mnm-frontend-admin\\src\\components\\header\\header.js",[],"C:\\Users\\pabinlimbu\\Documents\\personal-projects\\mnm\\mnm-frontend-admin\\src\\container\\Category\\index.js",["218","219","220","221","222","223","224","225","226"],"import React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Col, Container, Row, Modal, Button } from \"react-bootstrap\";\r\nimport Layout from \"../../components/layout/layout\";\r\nimport {\r\n  addCategory,\r\n  getAllCategory,\r\n  updateCategories,\r\n  deleteCategories as deleteCategoryAction,\r\n} from \"../../store/actions\";\r\nimport {\r\n  IoIosAdd,\r\n  IoIosCheckboxOutline,\r\n  IoIosCreate,\r\n  IoIosSquareOutline,\r\n  IoIosTrash,\r\n} from \"react-icons/io\";\r\nimport { IoChevronForwardOutline, IoChevronDownOutline } from \"react-icons/io5\";\r\n// check box tree Import\r\nimport CheckboxTree from \"react-checkbox-tree\";\r\nimport \"react-checkbox-tree/lib/react-checkbox-tree.css\";\r\n// check box tree Import END\r\nimport \"./style.css\";\r\nimport UpdateCategoryModal from \"./components/UpdateCategoriesModal\";\r\nimport AddCategoryModal from \"./components/AddCategoryModal\";\r\nimport DeleteCategoryModal from \"./components/DeleteCategoryModal\";\r\n\r\nfunction Category() {\r\n  /**State variables */\r\n  const [show, setShow] = useState(false);\r\n  const [categoryName, setCategoryName] = useState(\"\");\r\n  const [parentCategoryId, setParentCategoryId] = useState(\"\");\r\n  const [categoryImage, setCategoryImage] = useState(\"\");\r\n  // checkbox tree state variable.\r\n  const [checked, setChecked] = useState([]);\r\n  const [expanded, setExpanded] = useState([]);\r\n  const [checkedArray, setCheckedArray] = useState([]);\r\n  const [expandedArray, setExpandedArray] = useState([]);\r\n  /**State variables END */\r\n\r\n  // update cat MODAL\r\n  const [updateCategoryModal, setUpdateCategoryModal] = useState(false);\r\n  // update cat MODAL END\r\n  const [showDeleteModal, setShowDeleteModal] = useState(false);\r\n\r\n  const dispatch = useDispatch();\r\n  const category = useSelector((state) => state.category);\r\n\r\n  useEffect(() => {\r\n    if (!category.loading) {\r\n      setCategoryName(\"\");\r\n      setParentCategoryId(\"\");\r\n      setCategoryImage(\"\");\r\n      setShow(false);\r\n    }\r\n  }, [category.loading]);\r\n\r\n  /**category drop down list */\r\n  const createCtegorylist = (categories, options = []) => {\r\n    for (let category of categories) {\r\n      options.push({\r\n        value: category._id,\r\n        name: category.name,\r\n        parentId: category.parentId,\r\n        type: category.type,\r\n        isfeatured: category.isfeatured ? category.isfeatured : false,\r\n      });\r\n      if (category.children.length > 0) {\r\n        createCtegorylist(category.children, options);\r\n      }\r\n    }\r\n    return options;\r\n  };\r\n  /**category drop down list END */\r\n\r\n  /**Category modal */\r\n  const handleClose = (e) => {\r\n    setCategoryName(\"\");\r\n    setParentCategoryId(\"\");\r\n    setCategoryImage(\"\");\r\n    setShow(false);\r\n  };\r\n\r\n  const submitAddCategoryForm = () => {\r\n    if (categoryName === \"\") {\r\n      console.log(\"Cateory name Cannot be empty\");\r\n\r\n      return;\r\n    }\r\n    const form = new FormData();\r\n    form.append(\"name\", categoryName);\r\n    form.append(\"parentId\", parentCategoryId);\r\n    form.append(\"categoryImage\", categoryImage);\r\n    //console.log(form.get(\"name\"));\r\n    dispatch(addCategory(form));\r\n  };\r\n\r\n  const handleShow = () => setShow(true);\r\n  /**category modal End */\r\n\r\n  // UPDATE CATEGORY MODAL > BTN\r\n  const updateCategory = () => {\r\n    updateCheckedAndExpandedCategories();\r\n    setUpdateCategoryModal(true);\r\n  };\r\n  //  UPDATE CATEGORY MODAL > BTN END\r\n\r\n  const updateCheckedAndExpandedCategories = () => {\r\n    const categories = createCtegorylist(category.categories);\r\n    const checkedArray = [];\r\n    const expandedArray = [];\r\n\r\n    //get whole object info for checked and expanded array\r\n    checked.length > 0 &&\r\n      checked.forEach((categoryId, index) => {\r\n        const category = categories.find(\r\n          (category, _index) => categoryId == category.value\r\n        );\r\n        category && checkedArray.push(category);\r\n      });\r\n    expanded.length > 0 &&\r\n      expanded.forEach((categoryId, index) => {\r\n        const category = categories.find(\r\n          (category, _index) => categoryId == category.value\r\n        );\r\n        category && expandedArray.push(category);\r\n      });\r\n    //update corresponding state variable.\r\n    setCheckedArray(checkedArray);\r\n    setExpandedArray(expandedArray);\r\n\r\n    //console.log({ checked, expanded, categories, checkedArray, expandedArray });\r\n  };\r\n\r\n  //submit update-category form\r\n  const submitUpdateCategoriesForm = () => {\r\n    const form = new FormData();\r\n    expandedArray.forEach((item, index) => {\r\n      form.append(\"_id\", item.value);\r\n      form.append(\"name\", item.name);\r\n      form.append(\"parentId\", item.parentId ? item.parentId : null);\r\n      form.append(\"type\", item.type);\r\n      form.append(\"isfeatured\", item.isfeatured ? item.isfeatured : false);\r\n    });\r\n\r\n    checkedArray.forEach((item, index) => {\r\n      form.append(\"_id\", item.value);\r\n      form.append(\"name\", item.name);\r\n      form.append(\"parentId\", item.parentId ? item.parentId : null);\r\n      form.append(\"type\", item.type);\r\n      form.append(\"isfeatured\", item.isfeatured ? item.isfeatured : false);\r\n    });\r\n\r\n    // for (var pair of form) {\r\n    //   //  console.log(pair[0] + \", \" + pair[1]);\r\n    //   console.log(pair);\r\n    // }\r\n\r\n    dispatch(updateCategories(form));\r\n    // .then((result) => {\r\n    //   if (result) {\r\n    //     //directly dispatching if success , less expensive call and less recusion.\r\n    //     // in other case we would carry below dispatch from the category action inside updatecategories api.\r\n    //     dispatch(getAllCategory());\r\n    //   }\r\n    //   if (!result) {\r\n    //     console.log(\"Error at category-- updatecategories -- dispatch\");\r\n    //   }\r\n    // });\r\n    setUpdateCategoryModal(false);\r\n  };\r\n  //submit update-category form End\r\n\r\n  // handleEditCategoryInput / bind input on change with react state.\r\n  const handleEditCategoryInput = (key, value, index, type) => {\r\n    if (type == \"checked\") {\r\n      const updatedCheckedArray = checkedArray.map((item, _index) => {\r\n        if (index == _index) {\r\n          return { ...item, [key]: value };\r\n        }\r\n        return item;\r\n      });\r\n\r\n      setCheckedArray(updatedCheckedArray);\r\n    } else if (type == \"expanded\") {\r\n      const updatedExpandedArray = expandedArray.map((item, _index) =>\r\n        index == _index ? { ...item, [key]: value } : item\r\n      );\r\n      setExpandedArray(updatedExpandedArray);\r\n    }\r\n  };\r\n\r\n  // handleEditCategoryInput / bind input on change with react state. END\r\n\r\n  /**CREATE CATEGORY AND ITS SUB CATEGORY -- to render in checkbox tree  */\r\n  const renderCategories = (categories) => {\r\n    let categoryList = [];\r\n    for (let category of categories) {\r\n      categoryList.push({\r\n        label: category.name,\r\n        value: category._id,\r\n        children:\r\n          category.children.length > 0 && renderCategories(category.children),\r\n      });\r\n    }\r\n    return categoryList;\r\n  };\r\n  /**CREATE CATEGORY AND ITS SUB CATEGORY -- to render in checkbox tree END */\r\n\r\n  //DELETE CATEGORY MODAL--open\r\n  const deleteCategory = () => {\r\n    updateCheckedAndExpandedCategories();\r\n    setShowDeleteModal(true);\r\n    console.log(checkedArray, expandedArray);\r\n  };\r\n\r\n  //function to fialize category delete.\r\n  const deleteCategories = () => {\r\n    setShowDeleteModal(false);\r\n    const checkedIdsArray = checkedArray.map((item, index) => {\r\n      return { _id: item.value };\r\n    });\r\n    if (checkedArray.length > 0) {\r\n      dispatch(deleteCategoryAction(checkedIdsArray));\r\n    }\r\n  };\r\n\r\n  const handleCloseCategoryModal = () => {\r\n    setUpdateCategoryModal(false);\r\n  };\r\n\r\n  // const renderTest = () => {\r\n  //   return (\r\n  //     <Modal show={test}>\r\n  //       <Modal.Header closeButton>\r\n  //         <Modal.Title>Modal heading</Modal.Title>\r\n  //       </Modal.Header>\r\n  //       <Modal.Body>Woohoo, you're reading this text in a modal!</Modal.Body>\r\n  //       <Modal.Footer>\r\n  //         <Button variant=\"secondary\" onClick={handleClose}>\r\n  //           Close\r\n  //         </Button>\r\n  //         <Button variant=\"primary\" onClick={handleClose}>\r\n  //           Save Changes\r\n  //         </Button>\r\n  //       </Modal.Footer>\r\n  //     </Modal>\r\n  //   );\r\n  // };\r\n\r\n  const categoryList = createCtegorylist(category.categories);\r\n  return (\r\n    <Layout sidebar>\r\n      <Container>\r\n        <Row>\r\n          <Col sm={12}>\r\n            <div className=\"d-flex flex-column flex-md-row justify-content-md-between\">\r\n              <h3>Category</h3>\r\n              <div className=\"actionBtnContainer\">\r\n                <span className=\"d-none d-md-block\">Actions: </span>\r\n                <button onClick={handleShow}>\r\n                  <IoIosAdd /> <span> Add </span>\r\n                </button>\r\n                <button onClick={updateCategory}>\r\n                  <IoIosCreate /> <span>Edit</span>\r\n                </button>\r\n                <button onClick={deleteCategory}>\r\n                  <IoIosTrash /> <span>Delete</span>\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col sm={12}>\r\n            {/* {renderCategories(category.categories)} */}\r\n            <CheckboxTree\r\n              nodes={renderCategories(category.categories)}\r\n              checked={checked}\r\n              expanded={expanded}\r\n              onCheck={(checked) => setChecked(checked)}\r\n              onExpand={(expanded) => setExpanded(expanded)}\r\n              icons={{\r\n                check: <IoIosCheckboxOutline />,\r\n                uncheck: <IoIosSquareOutline />,\r\n                // halfCheck: <IoIosCheckboxOutline />,\r\n                expandClose: <IoChevronForwardOutline />,\r\n                expandOpen: <IoChevronDownOutline />,\r\n                // expandAll: <IoIosCheckboxOutline />,\r\n                // collapseAll: <IoIosCheckboxOutline />,\r\n                // parentClose: <IoIosCheckboxOutline />,\r\n                // parentOpen: <IoIosCheckboxOutline />,\r\n                // leaf: <IoIosCheckboxOutline />,\r\n              }}\r\n            />\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n\r\n      {/*REDNER ADD CATEGORY MODAL */}\r\n      <AddCategoryModal\r\n        show={show}\r\n        handleClose={handleClose}\r\n        modalTitle=\"Add new category\"\r\n        btnName=\"save\"\r\n        handleSave={submitAddCategoryForm}\r\n        categoryList={categoryList}\r\n        setCategoryName={setCategoryName}\r\n        parentCategoryId={parentCategoryId}\r\n        categoryName={categoryName}\r\n        setParentCategoryId={setParentCategoryId}\r\n      />\r\n      {/* RENDER UPDATE CATEGORY MODAL */}\r\n      <UpdateCategoryModal\r\n        show={updateCategoryModal}\r\n        handleClose={handleCloseCategoryModal}\r\n        modaltitle=\"EDIT category\"\r\n        btnName=\"save Category\"\r\n        size=\"lg\"\r\n        handleSave={submitUpdateCategoriesForm}\r\n        handleEditCategoryInput={handleEditCategoryInput}\r\n        expandedArray={expandedArray}\r\n        checkedArray={checkedArray}\r\n        categoryList={categoryList}\r\n      />\r\n\r\n      {/*DELETE CATEGORY MODAL */}\r\n      <DeleteCategoryModal\r\n        show={showDeleteModal}\r\n        handleClose={() => setShowDeleteModal(false)}\r\n        modalTitle=\"Delete Confirmation\"\r\n        btnName=\"Delete category\"\r\n        //handleSave={sumbitDeleteCategoryForm}\r\n        buttons={[\r\n          {\r\n            label: \"No\",\r\n            color: \"primary\",\r\n            onClick: () => {\r\n              setShowDeleteModal(false);\r\n            },\r\n          },\r\n          {\r\n            label: \"Yes\",\r\n            color: \"danger\",\r\n            onClick: deleteCategories,\r\n          },\r\n        ]}\r\n        expandedArray={expandedArray}\r\n        checkedArray={checkedArray}\r\n      />\r\n    </Layout>\r\n  );\r\n}\r\nexport default Category;\r\n","C:\\Users\\pabinlimbu\\Documents\\personal-projects\\mnm\\mnm-frontend-admin\\src\\components\\ui\\modal\\index.js",[],["227","228"],"C:\\Users\\pabinlimbu\\Documents\\personal-projects\\mnm\\mnm-frontend-admin\\src\\store\\actions\\index.js",[],"C:\\Users\\pabinlimbu\\Documents\\personal-projects\\mnm\\mnm-frontend-admin\\src\\store\\actions\\initialData.actions.js",[],"C:\\Users\\pabinlimbu\\Documents\\personal-projects\\mnm\\mnm-frontend-admin\\src\\store\\reducers\\category.reducers.js",["229","230","231","232"],"import { categoryConstant } from \"../actions/constaints\";\r\nconst initState = { categories: [], loading: false };\r\n\r\nconst buildNewCategory = (parentId, categories, category) => {\r\n  //check if caegory is parent itself. where parentId is udefined\r\n  if (parentId == undefined) {\r\n    return [\r\n      ...categories,\r\n      {\r\n        _id: category._id,\r\n        name: category.name,\r\n        slug: category.slug,\r\n        type: category.type,\r\n        isfeatured: category.isfeatured,\r\n        children: [],\r\n      },\r\n    ];\r\n  }\r\n\r\n  let myCategories = [];\r\n  for (let cat of categories) {\r\n    //compare parent id with parent category.\r\n    if (cat._id == parentId) {\r\n      const newCategory = {\r\n        _id: category._id,\r\n        name: category.name,\r\n        slug: category.slug,\r\n        parentId: category.parentId,\r\n        type: category.type,\r\n        isfeatured: category.isfeatured,\r\n        children: [],\r\n      };\r\n\r\n      myCategories.push({\r\n        ...cat,\r\n        children:\r\n          cat.children.length > 0\r\n            ? [...cat.children, newCategory]\r\n            : [newCategory],\r\n      });\r\n    } else {\r\n      myCategories.push({\r\n        ...cat,\r\n        children: cat.children\r\n          ? buildNewCategory(parentId, cat.children, category)\r\n          : [],\r\n      });\r\n    }\r\n  }\r\n  return myCategories; //treversig list.\r\n};\r\n\r\nexport default (state = initState, action) => {\r\n  switch (action.type) {\r\n    case categoryConstant.GET_ALL_CATEGORY_SUCCESS:\r\n      state = { ...state, categories: action.payload.categories };\r\n\r\n      break;\r\n    case categoryConstant.ADD_NEW_CATEGORY_REQUEST:\r\n      state = { ...state, loading: true };\r\n      break;\r\n\r\n    case categoryConstant.ADD_NEW_CATEGORY_SUCCESS:\r\n      const catrgory = action.payload.category;\r\n      //we are sending parent id --> current category List and newly added category.\r\n      const updatedCategories = buildNewCategory(\r\n        catrgory.parentId,\r\n        state.categories,\r\n        catrgory\r\n      );\r\n      state = {\r\n        ...state,\r\n        categories: updatedCategories,\r\n\r\n        \r\n        loading: false,\r\n      };\r\n      break;\r\n\r\n    case categoryConstant.ADD_NEW_CATEGORY_FAILURE:\r\n      state = { ...state, loading: false, error: action.payload.error };\r\n      break;\r\n\r\n    //UPDATE CASES\r\n    case categoryConstant.UPDATE_CATEGORY_REQUEST:\r\n      state = { ...state, loading: true };\r\n      break;\r\n\r\n    case categoryConstant.UPDATE_CATEGORY_SUCCESS:\r\n      state = { ...state, loading: false };\r\n      break;\r\n    case categoryConstant.UPDATE_CATEGORY_FAILURE:\r\n      state = { ...state, error: action.payload.error, loading: false };\r\n      break;\r\n    //DELETE CASES\r\n    case categoryConstant.DELETE_CATEGORY_REQUEST:\r\n      state = { ...state, loading: true };\r\n      break;\r\n\r\n    case categoryConstant.DELETE_CATEGORY_SUCCESS:\r\n      state = { ...state, loading: false };\r\n      break;\r\n    case categoryConstant.DELETE_CATEGORY_FAILURE:\r\n      state = { ...state, error: action.payload.error, loading: false };\r\n      break;\r\n  }\r\n  return state;\r\n};\r\n","C:\\Users\\pabinlimbu\\Documents\\personal-projects\\mnm\\mnm-frontend-admin\\src\\store\\actions\\category.action.js",["233"],"import axiosInstance from \"../../helper/axios\";\r\nimport { categoryConstant } from \"./constaints\";\r\n\r\nconst getAllCategory = () => {\r\n  return async (dispatch) => {\r\n    dispatch({ type: categoryConstant.GET_ALL_CATEGORY_REQUEST });\r\n\r\n    const res = await axiosInstance.get(\"/category/getcategory\");\r\n\r\n    if (res.status === 200) {\r\n      //console.log(res);\r\n      const { categoryList } = res.data;\r\n      dispatch({\r\n        type: categoryConstant.GET_ALL_CATEGORY_SUCCESS,\r\n        payload: { categories: categoryList },\r\n      });\r\n    } else {\r\n      dispatch({\r\n        type: categoryConstant.GET_ALL_CATEGORY_FAILURE,\r\n        payload: {\r\n          error: res.data.error,\r\n        },\r\n      });\r\n    }\r\n  };\r\n};\r\n\r\nexport const addCategory = (form) => {\r\n  return async (dispatch) => {\r\n    dispatch({ type: categoryConstant.ADD_NEW_CATEGORY_REQUEST });\r\n\r\n    try {\r\n      const res = await axiosInstance.post(\"/category/create\", form);\r\n      if (res.status === 201) {\r\n        dispatch({\r\n          type: categoryConstant.ADD_NEW_CATEGORY_SUCCESS,\r\n          payload: { category: res.data.category },\r\n        });\r\n      } else {\r\n        dispatch({\r\n          type: categoryConstant.ADD_NEW_CATEGORY_FAILURE,\r\n          payload: res.data.error,\r\n        });\r\n      }\r\n    } catch (error) {\r\n      const { status } = error.response;\r\n      console.log(error.response);\r\n      console.log(status);\r\n    }\r\n  };\r\n};\r\n\r\nexport const updateCategories = (form) => {\r\n  return async (dispatch) => {\r\n    dispatch({ type: categoryConstant.UPDATE_CATEGORY_REQUEST });\r\n    //console.log(...form);\r\n    const res = await axiosInstance.post(\"/category/updateCategory\", form);\r\n\r\n    console.log(res);\r\n    // if (res.status == 201) {\r\n    //   dispatch(getAllCategory());\r\n    //   dispatch({ type: categoryConstant.UPDATE_CATEGORY_SUCCESS }); // fetching category might take some time -- show some loader while fetching cat.\r\n    // } else {\r\n    //   const { error } = res.data;\r\n    //   dispatch({\r\n    //     type: categoryConstant.UPDATE_CATEGORY_FAILURE,\r\n    //     payload: { error },\r\n    //   });\r\n    // }\r\n  };\r\n};\r\nexport const deleteCategories = (ids) => {\r\n  return async (dispatch) => {\r\n    dispatch({ type: categoryConstant.DELETE_CATEGORY_REQUEST });\r\n    const res = await axiosInstance.post(\"/category/delete\", {\r\n      payload: { ids },\r\n    });\r\n    if (res.status == 201) {\r\n      dispatch({ type: categoryConstant.DELETE_CATEGORY_SUCCESS });\r\n      dispatch(getAllCategory());\r\n    } else {\r\n      const { error } = res.data;\r\n      dispatch({\r\n        type: categoryConstant.DELETE_CATEGORY_FAILURE,\r\n        payload: { error },\r\n      });\r\n    }\r\n  };\r\n};\r\n\r\nexport { getAllCategory };\r\n","C:\\Users\\pabinlimbu\\Documents\\personal-projects\\mnm\\mnm-frontend-admin\\src\\container\\Product\\index.js",["234"],"import React, { useState } from \"react\";\r\nimport Layout from \"../../components/layout/layout\";\r\nimport { Container, Row, Col, Modal, Table } from \"react-bootstrap\";\r\nimport MyModal from \"../../components/ui/modal\";\r\nimport Input from \"../../components/ui/input/input\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  addProduct,\r\n  updateProduct,\r\n  deleteProduct,\r\n} from \"../../store/actions/product.actions\";\r\nimport { generatePublicUrl } from \"../../urlConfig\";\r\nimport EditProductModal from \"./components/EditProductModal\";\r\nimport ProductDetailsModal from \"./components/ProductDetailsModal\";\r\nimport \"./style.css\";\r\n\r\nfunction Product() {\r\n  /**state variables */\r\n  const [show, setShow] = useState(false);\r\n  const [name, setName] = useState(\"\");\r\n  const [productPictures, setProductPictures] = useState([]);\r\n  const [price, setPrice] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n  const [quantity, setQuantity] = useState(\"\");\r\n  const [categoryId, setCategoryId] = useState(\"\");\r\n  const [productDetailModalShow, setProductDetailModalShow] = useState(false);\r\n  const [productDetails, setProductDetails] = useState(null); //this product is used while updating product.\r\n  const [editProductModal, setEditProductModal] = useState(false);\r\n\r\n  //other variables\r\n  const categoryList = useSelector((state) => state.category);\r\n  const productList = useSelector((state) => state.product);\r\n  const dispatch = useDispatch();\r\n  /**state variables END */\r\n\r\n  /**MODAL FUNCTIOn */\r\n  const handleShow = () => setShow(true);\r\n\r\n  const handleClose = () => {\r\n    setShow(false);\r\n  };\r\n  /**MODAL FUNCTION END */\r\n\r\n  const handleSave = () => {\r\n    const form = new FormData();\r\n    form.append(\"name\", name);\r\n    form.append(\"quantity\", quantity);\r\n    form.append(\"price\", price);\r\n    form.append(\"description\", description);\r\n    form.append(\"category\", categoryId);\r\n    for (let pic of productPictures) {\r\n      form.append(\"productPicture\", pic);\r\n    }\r\n    dispatch(addProduct(form));\r\n  };\r\n\r\n  /**CATEGORY LIST FUCNTION */\r\n  const createCtegorylist = (categories, options = []) => {\r\n    for (let category of categories) {\r\n      options.push({ value: category._id, name: category.name });\r\n      if (category.children.length > 0) {\r\n        createCtegorylist(category.children, options);\r\n      }\r\n    }\r\n    return options;\r\n  };\r\n  /**CATEGORY LIST FUCNTION END */\r\n\r\n  /**handle product picture */\r\n  const handleProductPictures = (e) => {\r\n    setProductPictures([...productPictures, e.target.files[0]]);\r\n  };\r\n  /**handle product picture END */\r\n\r\n  const productDetailModalHandleClick = (product) => {\r\n    console.log(product);\r\n    setProductDetails(product);\r\n    setProductDetailModalShow(true);\r\n  };\r\n\r\n  // render editProductDetails modal.\r\n  const showEditProductModal = (product) => {\r\n    setProductDetails(product);\r\n    setEditProductModal(true);\r\n  };\r\n\r\n  const handleEditProductInput = (propertyname, value) => {\r\n    console.log(\"click\");\r\n    setProductDetails({ ...productDetails, [propertyname]: value });\r\n  };\r\n  const handleEditProductSubmitForm = () => {\r\n    // console.log(\"from submited\");\r\n    //  console.log(productDetails._id);\r\n\r\n    const form = new FormData();\r\n    form.append(\"_id\", productDetails._id);\r\n    form.append(\"name\", productDetails.name);\r\n    form.append(\"quantity\", productDetails.quantity);\r\n    form.append(\"price\", productDetails.price);\r\n    form.append(\"description\", productDetails.description);\r\n    form.append(\"category\", productDetails.category._id);\r\n    form.append(\"isfeatured\", productDetails.isFeatured ? true : false);\r\n    // for (var pair of form) {\r\n    //   console.log(pair[1]);\r\n    // }\r\n    dispatch(updateProduct(form));\r\n  };\r\n\r\n  const handleDeleteProduct = (product) => {\r\n    dispatch(deleteProduct(product));\r\n  };\r\n\r\n  const editProductModalHandleClose = () => {\r\n    setEditProductModal(false);\r\n  };\r\n\r\n  /**RENDER PRODUCT FUNCTION */\r\n  const renderProducts = () => {\r\n    return (\r\n      <Table responsive=\"sm\" style={{ fontSize: \"12px\" }}>\r\n        <thead>\r\n          <tr>\r\n            <th>S.N</th>\r\n            <th>Name</th>\r\n            <th>Price</th>\r\n            <th>Quantity</th>\r\n            <th>Category</th>\r\n            <th>CONTROLS</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {productList.products.length > 0 ? (\r\n            productList.products.map((product, index) => (\r\n              <tr\r\n                onClick={() => {\r\n                  productDetailModalHandleClick(product);\r\n                }}\r\n                key={product._id}\r\n              >\r\n                <td>{index}</td>\r\n                <td>{product.name}</td>\r\n                <td>{product.price}</td>\r\n                <td>{product.quantity}</td>\r\n                <td>{product.category.name}</td>\r\n                <td>\r\n                  <button\r\n                    onClick={(e) => {\r\n                      e.stopPropagation();\r\n                      showEditProductModal(product);\r\n                    }}\r\n                  >\r\n                    edit\r\n                  </button>\r\n                </td>\r\n                <td>\r\n                  {\" \"}\r\n                  <button\r\n                    onClick={(e) => {\r\n                      e.stopPropagation();\r\n\r\n                      handleDeleteProduct(product);\r\n                    }}\r\n                  >\r\n                    Delete\r\n                  </button>\r\n                </td>\r\n              </tr>\r\n            ))\r\n          ) : (\r\n            <tr>\r\n              <td>{\"no data\"}</td>\r\n            </tr>\r\n          )}\r\n        </tbody>\r\n      </Table>\r\n    );\r\n  };\r\n  /**RENDER PRODUCT FUNCTION END */\r\n\r\n  /**Add product modal */\r\n  const renderAddProductModal = () => {\r\n    return (\r\n      <MyModal\r\n        show={show}\r\n        handleClose={handleClose}\r\n        modalTitle=\"Add new product\"\r\n        btnName=\"Add product\"\r\n        handleSave={handleSave}\r\n      >\r\n        <Modal.Body>\r\n          <Input\r\n            label={\"prduct Name\"}\r\n            placeholder={\"Product Name\"}\r\n            value={name}\r\n            onChange={(e) => {\r\n              setName(e.target.value);\r\n            }}\r\n          ></Input>\r\n          <Input\r\n            label={\"quantity\"}\r\n            placeholder={\"quantity\"}\r\n            value={quantity}\r\n            onChange={(e) => {\r\n              setQuantity(e.target.value);\r\n            }}\r\n          ></Input>\r\n          <Input\r\n            label={\"price\"}\r\n            placeholder={\"price\"}\r\n            value={price}\r\n            onChange={(e) => {\r\n              setPrice(e.target.value);\r\n            }}\r\n          ></Input>\r\n          <Input\r\n            label={\"description\"}\r\n            placeholder={\"description\"}\r\n            value={description}\r\n            onChange={(e) => {\r\n              setDescription(e.target.value);\r\n            }}\r\n          ></Input>\r\n\r\n          <select\r\n            className=\"form-control\"\r\n            value={categoryId}\r\n            onChange={(e) => setCategoryId(e.target.value)}\r\n          >\r\n            <option>Select Category</option>\r\n            {createCtegorylist(categoryList.categories).map((option) => (\r\n              <option key={option.value} value={option.value}>\r\n                {option.name}\r\n              </option>\r\n            ))}\r\n          </select>\r\n          {productPictures.length > 0\r\n            ? productPictures.map((pic, index) => (\r\n                <div key={index}>{pic.name}</div>\r\n              ))\r\n            : null}\r\n\r\n          <input\r\n            type=\"file\"\r\n            name=\"productPicture\"\r\n            onChange={handleProductPictures}\r\n          ></input>\r\n        </Modal.Body>\r\n      </MyModal>\r\n    );\r\n  };\r\n  /**Add product modal END */\r\n\r\n  /**Render product detail modal */\r\n\r\n  const productDetailModalHandleClose = () => {\r\n    setProductDetailModalShow(false);\r\n  };\r\n\r\n  return (\r\n    <Layout sidebar>\r\n      <Container>\r\n        <Row>\r\n          <Col md={12}>\r\n            <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n              <h3>Add Product</h3>\r\n              <button onClick={handleShow}>Add</button>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col>{renderProducts()}</Col>\r\n        </Row>\r\n      </Container>\r\n\r\n      {/* categoryUpdateModal */}\r\n      <EditProductModal\r\n        show={editProductModal}\r\n        handleClose={editProductModalHandleClose}\r\n        buttons={[\r\n          {\r\n            label: \"Cancel\",\r\n            color: \"primary\",\r\n            onClick: () => {\r\n              editProductModalHandleClose();\r\n            },\r\n          },\r\n          {\r\n            label: \"Save Changes\",\r\n            color: \"danger\",\r\n            onClick: () => {\r\n              handleEditProductSubmitForm();\r\n            },\r\n          },\r\n        ]}\r\n        categories={categoryList}\r\n        productDetails={productDetails}\r\n        handleEditProductInput={handleEditProductInput}\r\n      ></EditProductModal>\r\n\r\n      <ProductDetailsModal\r\n        show={productDetailModalShow}\r\n        handleClose={productDetailModalHandleClose}\r\n        productDetails={productDetails}\r\n      ></ProductDetailsModal>\r\n\r\n      {renderAddProductModal()}\r\n      {/* {renderProductDetailsModal()} */}\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport default Product;\r\n","C:\\Users\\pabinlimbu\\Documents\\personal-projects\\mnm\\mnm-frontend-admin\\src\\store\\reducers\\product.reducers.js",["235","236"],"import { productConstaints } from \"../actions/constaints\";\r\nconst initialState = {\r\n  products: [],\r\n};\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case productConstaints.GET_ALL_PRODUCTS_SUCCESS:\r\n      state = { ...state, products: action.payload.products };\r\n      break;\r\n  }\r\n  return state;\r\n};\r\n","C:\\Users\\pabinlimbu\\Documents\\personal-projects\\mnm\\mnm-frontend-admin\\src\\store\\actions\\product.actions.js",[],"C:\\Users\\pabinlimbu\\Documents\\personal-projects\\mnm\\mnm-frontend-admin\\src\\container\\Category\\components\\updateCategoriesModal.js",["237"],"C:\\Users\\pabinlimbu\\Documents\\personal-projects\\mnm\\mnm-frontend-admin\\src\\container\\Category\\components\\UpdateCategoriesModal.js",["238","239","240","241","242","243"],"import React from \"react\";\r\nimport CategroyModal from \"../../../components/ui/modal\";\r\nimport Input from \"../../../components/ui/input/input\";\r\nimport { Col, Row, Modal } from \"react-bootstrap\";\r\n\r\nconst UpdateCategoryModal = (props) => {\r\n  const {\r\n    show,\r\n    size,\r\n    handleClose,\r\n    modalTitle,\r\n    btnName,\r\n    handleSave,\r\n    checkedArray,\r\n    expandedArray,\r\n    categoryList,\r\n    handleEditCategoryInput,\r\n  } = props;\r\n\r\n  console.log({ expandedArray, checkedArray });\r\n\r\n  return (\r\n    <CategroyModal\r\n      show={props.show}\r\n      handleClose={props.handleClose}\r\n      modalTitle={props.modalTitle}\r\n      btnName={props.btnName}\r\n      size={props.size}\r\n      handleSave={props.handleSave}\r\n    >\r\n      <Modal.Body>\r\n        {/* Expanded */}\r\n        <Row>\r\n          <Col>\r\n            <h6>Expanded</h6>\r\n          </Col>\r\n        </Row>\r\n        {expandedArray.length > 0 &&\r\n          expandedArray.map((item, index) => {\r\n            return (\r\n              <Row key={index}>\r\n                <Col>\r\n                  <Input\r\n                    placeholder={\"category\"}\r\n                    value={item.name}\r\n                    onChange={(e) => {\r\n                      handleEditCategoryInput(\r\n                        \"name\",\r\n                        e.target.value,\r\n                        index,\r\n                        \"expanded\"\r\n                      );\r\n                    }}\r\n                  ></Input>\r\n                </Col>\r\n                <Col>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    value={item.parentId}\r\n                    onChange={(e) => {\r\n                      handleEditCategoryInput(\r\n                        \"parentId\",\r\n                        e.target.value,\r\n                        index,\r\n                        \"expanded\"\r\n                      );\r\n                    }}\r\n                  >\r\n                    <option>Select Category</option>\r\n                    {categoryList.map((option) => (\r\n                      <option key={option.value} value={option.value}>\r\n                        {option.name}\r\n                      </option>\r\n                    ))}\r\n                  </select>\r\n                </Col>\r\n                <Col>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    onChange={(e) => {\r\n                      handleEditCategoryInput(\r\n                        \"type\",\r\n                        e.target.value,\r\n                        index,\r\n                        \"expanded\"\r\n                      );\r\n                    }}\r\n                  >\r\n                    <option value=\"\">select Type</option>\r\n                    <option value=\"Store\">Store</option>\r\n                    <option value=\"Product\">Product</option>\r\n                    <option value=\"Page\">Page </option>\r\n                  </select>\r\n                </Col>\r\n\r\n                <Col>\r\n                  <Input\r\n                    type=\"check\"\r\n                    label=\"feature Category\"\r\n                    value={\r\n                      item.isfeatured ? JSON.parse(item.isfeatured) : false\r\n                    }\r\n                    onChange={(e) => {\r\n                      handleEditCategoryInput(\r\n                        \"isfeatured\",\r\n                        e.target.checked,\r\n                        index,\r\n                        \"expanded\"\r\n                      );\r\n                      // handleEditProductInput(\"isFeatured\", e.target.checked);\r\n                    }}\r\n                  ></Input>\r\n                </Col>\r\n              </Row>\r\n            );\r\n          })}\r\n        {/* checked array */}{\" \"}\r\n        <Row>\r\n          <Col>\r\n            <h6>Checked</h6>\r\n          </Col>\r\n        </Row>\r\n        {checkedArray.length > 0 &&\r\n          checkedArray.map((item, index) => {\r\n            return (\r\n              <Row key={index}>\r\n                <Col>\r\n                  <Input\r\n                    placeholder={\"category\"}\r\n                    value={item.name}\r\n                    onChange={(e) => {\r\n                      handleEditCategoryInput(\r\n                        \"name\",\r\n                        e.target.value,\r\n                        index,\r\n                        \"checked\"\r\n                      );\r\n                    }}\r\n                  ></Input>\r\n                </Col>\r\n                <Col>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    value={item.parentId}\r\n                    onChange={(e) => {\r\n                      handleEditCategoryInput(\r\n                        \"parentId\",\r\n                        e.target.value,\r\n                        index,\r\n                        \"checked\"\r\n                      );\r\n                    }}\r\n                  >\r\n                    <option>Select Category</option>\r\n                    {categoryList.map((option) => (\r\n                      <option key={option.value} value={option.value}>\r\n                        {option.name}\r\n                      </option>\r\n                    ))}\r\n                  </select>\r\n                </Col>\r\n                <Col>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    value={item.type}\r\n                    onChange={(e) => {\r\n                      handleEditCategoryInput(\r\n                        \"type\",\r\n                        e.target.value,\r\n                        index,\r\n                        \"checked\"\r\n                      );\r\n                    }}\r\n                  >\r\n                    <option value=\"\">select Type</option>\r\n                    <option value=\"Store\">Store</option>\r\n                    <option value=\"Product\">Product</option>\r\n                    <option value=\"Page\">Page </option>\r\n                  </select>\r\n                </Col>\r\n                <Col>\r\n                  <Input\r\n                    type=\"check\"\r\n                    label={\"feature Category\"}\r\n                    value={\r\n                      item.isfeatured ? JSON.parse(item.isfeatured) : false\r\n                    }\r\n                    onChange={(e) => {\r\n                      handleEditCategoryInput(\r\n                        \"isfeatured\",\r\n                        e.target.checked,\r\n                        index,\r\n                        \"checked\"\r\n                      );\r\n                    }}\r\n                  ></Input>\r\n                </Col>\r\n              </Row>\r\n            );\r\n          })}\r\n      </Modal.Body>\r\n    </CategroyModal>\r\n  );\r\n};\r\nexport default UpdateCategoryModal;\r\n","C:\\Users\\pabinlimbu\\Documents\\personal-projects\\mnm\\mnm-frontend-admin\\src\\container\\Category\\components\\AddCategoryModal.js",[],"C:\\Users\\pabinlimbu\\Documents\\personal-projects\\mnm\\mnm-frontend-admin\\src\\container\\Category\\components\\DeleteCategoryModal.js",[],"C:\\Users\\pabinlimbu\\Documents\\personal-projects\\mnm\\mnm-frontend-admin\\src\\container\\NewPage\\index.js",["244"],"import React, { useEffect, useState } from \"react\";\r\nimport MyModal from \"../../components/ui/modal/MyModal\";\r\nimport Layout from \"../../components/layout/layout\";\r\nimport Input from \"../../components/ui/input/input\";\r\nimport LinearCategoriies from \"../../helper/LinearCategories\";\r\nimport { Row, Col } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { createPage } from \"../../store/actions\";\r\n\r\nfunction NewPage() {\r\n  const [createmodal, setCreateModal] = useState(false);\r\n  const [title, setTitle] = useState(\"\");\r\n  const [categories, setCategories] = useState([]);\r\n  const [categoryId, setCategoryId] = useState(\"\");\r\n  const [description, setDescription] = useState();\r\n  const [type, setType] = useState(\"\");\r\n  const [banners, setbanners] = useState([]);\r\n  const [products, setProducts] = useState([]);\r\n  const dispatch = useDispatch();\r\n  const category = useSelector((state) => state.category);\r\n  const page = useSelector((state) => state.page);\r\n\r\n  useEffect(() => {\r\n    setCategories(LinearCategoriies(category.categories));\r\n  }, [category]);\r\n\r\n  useEffect(() => {\r\n    console.log(page);\r\n    if (!page.loading) {\r\n      setCreateModal(false);\r\n      setTitle(\"\");\r\n      setType(\"\");\r\n      setDescription(\"\");\r\n      setCategoryId(\"\");\r\n      setProducts([]);\r\n      setbanners([]);\r\n    }\r\n  }, [page]);\r\n\r\n  const handleBannerImages = (e) => {\r\n    console.log(e);\r\n    setbanners([...banners, e.target.files[0]]);\r\n  };\r\n  const handleProductImages = (e) => {\r\n    console.log(e);\r\n    setProducts([...products, e.target.files[0]]);\r\n  };\r\n\r\n  const onCategoryChange = (e) => {\r\n    const category = categories.find(\r\n      (category) => category._id == e.target.value\r\n    );\r\n    setCategoryId(e.target.value);\r\n    setType(category.type);\r\n  };\r\n  const submitPageForm = (e) => {\r\n    if (title === \"\") {\r\n      setCreateModal(false);\r\n      alert(\"Title is required\");\r\n      return;\r\n    }\r\n    const form = new FormData();\r\n    form.append(\"title\", title);\r\n    form.append(\"description\", description);\r\n    form.append(\"category\", categoryId);\r\n    form.append(\"type\", type);\r\n    banners.forEach((banner, index) => {\r\n      return form.append(\"banners\", banner);\r\n    });\r\n\r\n    products.forEach((product, index) => {\r\n      return form.append(\"products\", product);\r\n    });\r\n    dispatch(createPage(form));\r\n  };\r\n\r\n  const renderCreatePageModal = () => {\r\n    return (\r\n      <MyModal\r\n        show={createmodal}\r\n        modalTitle={\"create new page\"}\r\n        handleClose={() => {\r\n          setCreateModal(false);\r\n        }}\r\n        btnName=\"save\"\r\n        handleSave={submitPageForm}\r\n      >\r\n        <Row>\r\n          <Col>\r\n            {/* <select\r\n              className=\"form-control form-control-sm\"\r\n              value={categoryId}\r\n              onChange={onCategoryChange}\r\n            >\r\n              <option value=\"\">Select Category</option>\r\n              {categories &&\r\n                categories.map((cat) => (\r\n                  <option key={cat._id} value={cat._id}>\r\n                    {cat.name}\r\n                  </option>\r\n                ))}\r\n            </select> */}\r\n            <Input\r\n              type=\"select\"\r\n              value={categoryId}\r\n              onChange={onCategoryChange}\r\n              options={categories}\r\n              placeholder=\"Select Category\"\r\n            ></Input>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col>\r\n            <Input\r\n              value={title}\r\n              onChange={(e) => {\r\n                setTitle(e.target.value);\r\n              }}\r\n              placeholder=\"Page Title\"\r\n              className=\"form-control form-control-sm\"\r\n            ></Input>\r\n            <Input\r\n              value={description}\r\n              onChange={(e) => {\r\n                setDescription(e.target.value);\r\n              }}\r\n              placeholder=\"Description\"\r\n              className=\"form-control form-control-sm mt-3\"\r\n            ></Input>\r\n          </Col>\r\n        </Row>\r\n        {banners && banners.length > 0\r\n          ? banners.map((banner, index) => {\r\n              return (\r\n                <Row key={index}>\r\n                  <Col>{banner.name}</Col>\r\n                </Row>\r\n              );\r\n            })\r\n          : null}\r\n        <Row>\r\n          <Col>\r\n            <Input\r\n              type=\"file\"\r\n              name=\"banner\"\r\n              onChange={handleBannerImages}\r\n            ></Input>\r\n          </Col>\r\n        </Row>\r\n        {products && products.length > 0\r\n          ? products.map((product, index) => {\r\n              return (\r\n                <Row key={index}>\r\n                  <Col>{product.name}</Col>\r\n                </Row>\r\n              );\r\n            })\r\n          : null}\r\n        <Row>\r\n          <Col>\r\n            <Input\r\n              type=\"file\"\r\n              name=\"product\"\r\n              onChange={handleProductImages}\r\n            ></Input>\r\n          </Col>\r\n        </Row>\r\n      </MyModal>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Layout sidebar>\r\n      {page.loading ? (\r\n        <>\r\n          <p>Creating page...........</p>\r\n        </>\r\n      ) : (\r\n        <>\r\n          <button\r\n            onClick={() => {\r\n              setCreateModal(true);\r\n            }}\r\n          >\r\n            {\" \"}\r\n            show modal\r\n          </button>\r\n          {renderCreatePageModal()}\r\n        </>\r\n      )}\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport default NewPage;\r\n","C:\\Users\\pabinlimbu\\Documents\\personal-projects\\mnm\\mnm-frontend-admin\\src\\components\\ui\\modal\\MyModal.js",[],"C:\\Users\\pabinlimbu\\Documents\\personal-projects\\mnm\\mnm-frontend-admin\\src\\helper\\LinearCategories.js",[],"C:\\Users\\pabinlimbu\\Documents\\personal-projects\\mnm\\mnm-frontend-admin\\src\\store\\actions\\page.actions.js",[],"C:\\Users\\pabinlimbu\\Documents\\personal-projects\\mnm\\mnm-frontend-admin\\src\\store\\reducers\\page.reducer.js",["245","246"],"import { pageConstant } from \"../actions\";\r\nconst initialState = {\r\n  error: null,\r\n  loading: false,\r\n  page: {},\r\n};\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case pageConstant.CREATE_PAGE_REQUEST:\r\n      state = {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n      break;\r\n    case pageConstant.CREATE_PAGE_SUCCESS:\r\n      state = { ...state, loading: false };\r\n      break;\r\n    case pageConstant.CREATE_PAGE_FAILURE:\r\n      state = {\r\n        ...state,\r\n        loading: false,\r\n        error: action.payload.error,\r\n      };\r\n  }\r\n\r\n  return state;\r\n};\r\n","C:\\Users\\pabinlimbu\\Documents\\personal-projects\\mnm\\mnm-frontend-admin\\src\\container\\Product\\components\\EditProductModal.js",[],"C:\\Users\\pabinlimbu\\Documents\\personal-projects\\mnm\\mnm-frontend-admin\\src\\container\\Product\\components\\ProductDetailsModal.js",[],"C:\\Users\\pabinlimbu\\Documents\\personal-projects\\mnm\\mnm-frontend-admin\\src\\container\\Banner\\index.js",["247","248"],"import React, { useEffect } from \"react\";\r\nimport { useState } from \"react\";\r\nimport Layout from \"../../components/layout/layout\";\r\nimport MyModal from \"../../components/ui/modal/MyModal\";\r\nimport Input from \"../../components/ui/input/input\";\r\nimport { Col, Container, Form, FormGroup, Row, Table } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  addBanner,\r\n  getBanner,\r\n  deleteBanner,\r\n} from \"../../store/actions/banner.actions\";\r\n\r\nimport BannerDetailsModal from \"./components/BannerDetailsModal\";\r\n\r\nfunction Banner() {\r\n  const [showmodal, setShowmodal] = useState(false);\r\n  const [name, setName] = useState(\"\");\r\n  const [linkType, setlinkType] = useState(\"\");\r\n  const [bannerImage, setBannerImage] = useState([]);\r\n  const [slug, setSlug] = useState(\"\");\r\n  const [category, setCategory] = useState(\"\");\r\n  const [bannerDetails, setbannerDetails] = useState(null);\r\n  const [bannerDetailsModalShow, setBannerDetailsModalShow] = useState(false);\r\n  const dispatch = useDispatch();\r\n  //redux store.\r\n  const categoryList = useSelector((state) => state.category);\r\n  const productList = useSelector((state) => state.product);\r\n  const bannerList = useSelector((state) => state.banner);\r\n\r\n  useEffect(() => {\r\n    dispatch(getBanner());\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setSlug(\"\");\r\n  }, [linkType]);\r\n\r\n  /**Banner model function  */\r\n  const handleModalClose = () => {\r\n    setShowmodal(false);\r\n    setName(\"\");\r\n    setlinkType(\"\");\r\n    setBannerImage(\"\");\r\n    setSlug(\"\");\r\n  };\r\n\r\n  const handleBannerSave = () => {\r\n    const form = new FormData();\r\n    form.append(\"name\", name);\r\n    form.append(\"bannerImage\", bannerImage);\r\n    form.append(\"linkType\", linkType);\r\n    form.append(\"slug\", slug);\r\n    form.append(\"category\", category);\r\n    dispatch(addBanner(form));\r\n  };\r\n\r\n  const handleBannerPicture = (e) => {\r\n    setBannerImage(e.target.files[0]);\r\n  };\r\n\r\n  const handleLinkSelect = (e) => {\r\n    setSlug(e.target.value);\r\n    const catid =\r\n      e.target.options[e.target.options.selectedIndex].getAttribute(\"category\");\r\n    setCategory(catid);\r\n  };\r\n\r\n  const bannerDetailModalHandleClose = () => {\r\n    setBannerDetailsModalShow(false);\r\n  };\r\n\r\n  const handleBannerOkButton = () => {\r\n    setBannerDetailsModalShow(false);\r\n  };\r\n  /**Banner model function  END*/\r\n\r\n  /**CATEGORY and PRODUCT Linear LIST FUCNTION */\r\n  const createCtegorylist = (categories, options = []) => {\r\n    for (let category of categories) {\r\n      options.push({\r\n        value: category._id,\r\n        name: category.name,\r\n        slug: category.slug,\r\n      });\r\n      if (category.children.length > 0) {\r\n        createCtegorylist(category.children, options);\r\n      }\r\n    }\r\n    return options;\r\n  };\r\n\r\n  const createProductList = (products, options = []) => {\r\n    for (let product of products) {\r\n      options.push({\r\n        value: product._id,\r\n        name: product.name,\r\n        slug: product.slug,\r\n      });\r\n    }\r\n    return options;\r\n  };\r\n  /**CATEGORY and PRODUCT Linear LIST FUCNTION END */\r\n\r\n  /*  RENDER BANNER LIST  */\r\n  const renderBanner = (bannerList) => {\r\n    return (\r\n      <div>\r\n        <Table\r\n          responsive=\"sm\"\r\n          style={{ fontSize: \"12px\" }}\r\n          striped\r\n          bordered\r\n          hover\r\n        >\r\n          <thead>\r\n            <tr>\r\n              <th>SN</th>\r\n              <th>Name</th>\r\n              <th>Type</th>\r\n              <th>Link</th>\r\n              <th>Controls</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {bannerList.banner.length > 0\r\n              ? bannerList.banner.map((banner, index) => {\r\n                  return (\r\n                    <tr\r\n                      onClick={() => {\r\n                        setBannerDetailsModalShow(true);\r\n                        setbannerDetails(banner);\r\n                      }}\r\n                      key={banner._id}\r\n                    >\r\n                      <td>{index}</td>\r\n                      <td>{banner.name}</td>\r\n                      <td>{banner.linkType}</td>\r\n                      <td>{banner.slug}</td>\r\n\r\n                      <td>\r\n                        <button\r\n                          onClick={(event) => {\r\n                            event.stopPropagation();\r\n                            handleBannerDelete(banner);\r\n                          }}\r\n                        >\r\n                          Delete\r\n                        </button>\r\n                      </td>\r\n                    </tr>\r\n                  );\r\n                })\r\n              : null}\r\n          </tbody>\r\n        </Table>\r\n      </div>\r\n    );\r\n  };\r\n  const handleBannerDelete = (bannerdata) => {\r\n    dispatch(deleteBanner(bannerdata));\r\n  };\r\n  /*  RENDER BANNER LIST END  */\r\n\r\n  const renderAddBannerModal = () => {\r\n    return (\r\n      <MyModal\r\n        show={showmodal}\r\n        handleClose={handleModalClose}\r\n        modalTitle={\"Banner\"}\r\n        size=\"lg\"\r\n        buttons={[\r\n          {\r\n            label: \"Cancel\",\r\n            color: \"primary\",\r\n            onClick: (e) => {\r\n              handleModalClose();\r\n            },\r\n          },\r\n          {\r\n            label: \"Save Changes\",\r\n            color: \"danger\",\r\n            onClick: () => {\r\n              handleBannerSave();\r\n            },\r\n          },\r\n        ]}\r\n      >\r\n        <Form>\r\n          <Input\r\n            label={\"Banner Name\"}\r\n            placeholder={\"Banner Name\"}\r\n            value={name}\r\n            onChange={(e) => {\r\n              setName(e.target.value);\r\n            }}\r\n          ></Input>\r\n          <FormGroup>\r\n            <input\r\n              type=\"file\"\r\n              name=\"bannerPicture\"\r\n              onChange={(e) => {\r\n                handleBannerPicture(e);\r\n              }}\r\n            ></input>\r\n          </FormGroup>\r\n          <FormGroup>\r\n            <Form.Label>Select Link Type</Form.Label>\r\n            <Form.Check\r\n              type={\"radio\"}\r\n              id={`rdo-product`}\r\n              label={`Product`}\r\n              name=\"bannerLinkType\"\r\n              onClick={() => setlinkType(\"product\")}\r\n            />\r\n            <Form.Check\r\n              type={\"radio\"}\r\n              id={`rdo-category`}\r\n              label={`category`}\r\n              name=\"bannerLinkType\"\r\n              onClick={() => setlinkType(\"category\")}\r\n            />\r\n          </FormGroup>\r\n          <fieldset disabled={linkType == \"\" ? true : false}>\r\n            <FormGroup>\r\n              <Form.Select\r\n                size=\"lg\"\r\n                onChange={(e) => {\r\n                  handleLinkSelect(e);\r\n                }}\r\n                value={slug}\r\n              >\r\n                <option>Select Banner Link</option>\r\n                {linkType === \"category\"\r\n                  ? createCtegorylist(categoryList.categories).map((item) => {\r\n                      return (\r\n                        <option\r\n                          key={item.value}\r\n                          // value={item.slug}\r\n                          category={item.value}\r\n                        >\r\n                          {item.name}\r\n                        </option>\r\n                      );\r\n                    })\r\n                  : linkType === \"product\"\r\n                  ? createProductList(productList.products).map((item) => {\r\n                      return (\r\n                        <option\r\n                          key={item.value}\r\n                          //value={item.slug}\r\n                          category={item.value}\r\n                        >\r\n                          {item.name}\r\n                        </option>\r\n                      );\r\n                    })\r\n                  : null}\r\n              </Form.Select>\r\n            </FormGroup>\r\n          </fieldset>\r\n        </Form>\r\n      </MyModal>\r\n    );\r\n  };\r\n\r\n  //logs\r\n  // console.log(bannerDetails);\r\n\r\n  return (\r\n    <Layout sidebar>\r\n      <Container>\r\n        <Row>\r\n          <Col className=\"d-flex\">\r\n            <h3>Add banner</h3>\r\n            <button\r\n              onClick={() => {\r\n                setShowmodal(true);\r\n              }}\r\n            >\r\n              add banner\r\n            </button>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col>{renderBanner(bannerList)}</Col>\r\n        </Row>\r\n      </Container>\r\n      {renderAddBannerModal()}\r\n      <BannerDetailsModal\r\n        show={bannerDetailsModalShow}\r\n        handleClose={bannerDetailModalHandleClose}\r\n        bannerDetails={bannerDetails}\r\n        handleSave={handleBannerOkButton}\r\n      ></BannerDetailsModal>\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport default Banner;\r\n","C:\\Users\\pabinlimbu\\Documents\\personal-projects\\mnm\\mnm-frontend-admin\\src\\store\\actions\\banner.actions.js",[],"C:\\Users\\pabinlimbu\\Documents\\personal-projects\\mnm\\mnm-frontend-admin\\src\\store\\reducers\\banner.reducers.js",["249","250"],"import { bannerConstants } from \"../actions/constaints\";\r\nconst initState = {\r\n  banner: [],\r\n  loading: false,\r\n};\r\n\r\nexport default (state = initState, action) => {\r\n  switch (action.type) {\r\n    case bannerConstants.GET_BANNER_SUCCESS:\r\n      state = { ...state, banner: action.payload.banner.data };\r\n      break;\r\n  }\r\n  return state;\r\n};\r\n","C:\\Users\\pabinlimbu\\Documents\\personal-projects\\mnm\\mnm-frontend-admin\\src\\container\\Banner\\components\\BannerDetailsModal.js",[],"C:\\Users\\pabinlimbu\\Documents\\personal-projects\\mnm\\mnm-frontend-admin\\src\\container\\UserComments\\index.js",["251"],"import React, { useEffect, useState } from \"react\";\r\nimport { Col, Container, Row, Table } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getComment, addComment, deleteComment } from \"../../store/actions\";\r\nimport Layout from \"../../components/layout/layout\";\r\nimport Input from \"../../components/ui/input/input\";\r\nimport MyModal from \"../../components/ui/modal/MyModal\";\r\nfunction UserComments() {\r\n  const [commenter, setCommenter] = useState(\"\");\r\n  const [comment, setComment] = useState(\"\");\r\n  const [showAddCommentModal, setShowAddCommentModal] = useState(false);\r\n  const dispatch = useDispatch();\r\n\r\n  //store redux\r\n  const commentList = useSelector((state) => state.userComment);\r\n\r\n  //hooks\r\n  useEffect(() => {\r\n    dispatch(getComment());\r\n  }, []);\r\n\r\n  const handleModalClose = () => {\r\n    setShowAddCommentModal(false);\r\n    setComment(\"\");\r\n    setCommenter(\"\");\r\n  };\r\n  const handleCommentSave = () => {\r\n    const data = { commenter, comment };\r\n    dispatch(addComment(data));\r\n    console.log(\"save comments\");\r\n  };\r\n\r\n  const handleDeleteUserComment = (id) => {\r\n    dispatch(deleteComment(id));\r\n  };\r\n\r\n  const rennderAddCommentModal = () => {\r\n    return (\r\n      <MyModal\r\n        show={showAddCommentModal}\r\n        handleClose={handleModalClose}\r\n        modalTitle={\"Add comments\"}\r\n        size=\"lg\"\r\n        buttons={[\r\n          {\r\n            label: \"Cancel\",\r\n            color: \"primary\",\r\n            onClick: (e) => {\r\n              handleModalClose();\r\n            },\r\n          },\r\n          {\r\n            label: \"Save Changes\",\r\n            color: \"danger\",\r\n            onClick: () => {\r\n              handleCommentSave();\r\n            },\r\n          },\r\n        ]}\r\n      >\r\n        <Input\r\n          label={\"commenter\"}\r\n          placeholder={\"commenter name\"}\r\n          value={commenter}\r\n          onChange={(e) => {\r\n            setCommenter(e.target.value);\r\n          }}\r\n        ></Input>\r\n        <Input\r\n          type={\"textArea\"}\r\n          label={\"commentttt\"}\r\n          placeholder={\"commentttt\"}\r\n          value={comment}\r\n          onChange={(e) => {\r\n            setComment(e.target.value);\r\n          }}\r\n        ></Input>\r\n      </MyModal>\r\n    );\r\n  };\r\n\r\n  const renderComments = (commentList) => {\r\n    return (\r\n      <div>\r\n        <Table\r\n          responsive=\"sm\"\r\n          style={{ fontSize: \"12px\" }}\r\n          striped\r\n          bordered\r\n          hover\r\n        >\r\n          <thead>\r\n            <tr>\r\n              <th>SN</th>\r\n              <th>commenter</th>\r\n              <th>Comment</th>\r\n              <th>Controls</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {commentList.comments.length > 0\r\n              ? commentList.comments.map((comment, index) => {\r\n                  return (\r\n                    <tr\r\n                      onClick={() => {\r\n                        // setBannerDetailsModalShow(true);\r\n                        // setbannerDetails(banner);\r\n                      }}\r\n                      key={comment._id}\r\n                    >\r\n                      <td>{index}</td>\r\n                      <td>{comment.commenter}</td>\r\n                      <td>{comment.comment}</td>\r\n\r\n                      <td>\r\n                        <button\r\n                          onClick={(event) => {\r\n                            handleDeleteUserComment(comment._id);\r\n                          }}\r\n                        >\r\n                          Delete\r\n                        </button>\r\n                      </td>\r\n                    </tr>\r\n                  );\r\n                })\r\n              : null}\r\n          </tbody>\r\n        </Table>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  //logs\r\n  // console.log(commentList.comments);\r\n  return (\r\n    <Layout sidebar>\r\n      <Container>\r\n        <Row>\r\n          <Col className=\"d-flex\" xs={12}>\r\n            {\" \"}\r\n            <h3>Add Comments</h3>\r\n            <button\r\n              onClick={() => {\r\n                setShowAddCommentModal(true);\r\n              }}\r\n            >\r\n              add Comments\r\n            </button>\r\n          </Col>\r\n          <Col>{renderComments(commentList)}</Col>\r\n        </Row>\r\n\r\n        {rennderAddCommentModal()}\r\n      </Container>\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport default UserComments;\r\n","C:\\Users\\pabinlimbu\\Documents\\personal-projects\\mnm\\mnm-frontend-admin\\src\\store\\actions\\usercomment.action.js",["252"],"import { userCommentConstants } from \"./constaints\";\r\nimport axiosInstance from \"../../helper/axios\";\r\n\r\nexport const addComment = (data) => {\r\n  return async (dispatch) => {\r\n    console.log(\"add comment action reached\");\r\n    console.log(data);\r\n    try {\r\n      const res = await axiosInstance.post(\"/comment/create\", data);\r\n      if (res.status === 200) {\r\n        dispatch({\r\n          type: userCommentConstants.CREATE_NEW_COMMENT_SUCCESS,\r\n          payload: { data: res.data },\r\n        });\r\n      }\r\n      if (res.status === 400) {\r\n        console.log(\"fail to insert data\");\r\n        dispatch({ type: userCommentConstants.CREATE_NEW_COMMENT_FAILURE });\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n};\r\nexport const getComment = () => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const res = await axiosInstance.get(\"/comment/getcomment\");\r\n      if (res.status === 200) {\r\n        dispatch({\r\n          type: userCommentConstants.GET_COMMENT_SUCCESS,\r\n          payload: { data: res.data },\r\n        });\r\n      }\r\n      if (res.status === 400) {\r\n        console.log(\"fail to fetch data\");\r\n        dispatch({ type: userCommentConstants.GET_COMMENT_FAILURE });\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n};\r\nexport const deleteComment = (id) => {\r\n  return async () => {\r\n    console.log(id);\r\n    const res = axiosInstance.post(\"comment/delete\", { id });\r\n  };\r\n};\r\n","C:\\Users\\pabinlimbu\\Documents\\personal-projects\\mnm\\mnm-frontend-admin\\src\\store\\reducers\\usercomment.reducers.js",["253","254"],"import { userCommentConstants } from \"../actions/constaints\";\r\nconst initState = {\r\n  comments: [],\r\n  loading: false,\r\n};\r\n\r\nexport default (state = initState, action) => {\r\n  switch (action.type) {\r\n    case userCommentConstants.GET_COMMENT_SUCCESS:\r\n      state = { ...state, comments: action.payload.data.data };\r\n      break;\r\n  }\r\n  return state;\r\n};\r\n",{"ruleId":"255","replacedBy":"256"},{"ruleId":"257","replacedBy":"258"},{"ruleId":"259","severity":1,"message":"260","line":34,"column":6,"nodeType":"261","endLine":34,"endColumn":25,"suggestions":"262"},{"ruleId":"263","severity":1,"message":"264","line":3,"column":10,"nodeType":"265","messageId":"266","endLine":3,"endColumn":19},{"ruleId":"263","severity":1,"message":"267","line":14,"column":10,"nodeType":"265","messageId":"266","endLine":14,"endColumn":15},{"ruleId":"263","severity":1,"message":"268","line":14,"column":17,"nodeType":"265","messageId":"266","endLine":14,"endColumn":25},{"ruleId":"269","severity":1,"message":"270","line":4,"column":1,"nodeType":"271","endLine":28,"endColumn":3},{"ruleId":"272","severity":1,"message":"273","line":5,"column":3,"nodeType":"274","messageId":"275","endLine":26,"endColumn":4},{"ruleId":"269","severity":1,"message":"270","line":10,"column":1,"nodeType":"271","endLine":46,"endColumn":3},{"ruleId":"272","severity":1,"message":"273","line":12,"column":3,"nodeType":"274","messageId":"275","endLine":44,"endColumn":4},{"ruleId":"263","severity":1,"message":"276","line":1,"column":10,"nodeType":"265","messageId":"266","endLine":1,"endColumn":23},{"ruleId":"263","severity":1,"message":"277","line":4,"column":31,"nodeType":"265","messageId":"266","endLine":4,"endColumn":36},{"ruleId":"263","severity":1,"message":"278","line":4,"column":38,"nodeType":"265","messageId":"266","endLine":4,"endColumn":44},{"ruleId":"263","severity":1,"message":"279","line":8,"column":3,"nodeType":"265","messageId":"266","endLine":8,"endColumn":17},{"ruleId":"280","severity":1,"message":"281","line":118,"column":44,"nodeType":"282","messageId":"283","endLine":118,"endColumn":46},{"ruleId":"280","severity":1,"message":"281","line":125,"column":44,"nodeType":"282","messageId":"283","endLine":125,"endColumn":46},{"ruleId":"280","severity":1,"message":"281","line":177,"column":14,"nodeType":"282","messageId":"283","endLine":177,"endColumn":16},{"ruleId":"280","severity":1,"message":"281","line":179,"column":19,"nodeType":"282","messageId":"283","endLine":179,"endColumn":21},{"ruleId":"280","severity":1,"message":"281","line":186,"column":21,"nodeType":"282","messageId":"283","endLine":186,"endColumn":23},{"ruleId":"280","severity":1,"message":"281","line":188,"column":15,"nodeType":"282","messageId":"283","endLine":188,"endColumn":17},{"ruleId":"255","replacedBy":"284"},{"ruleId":"257","replacedBy":"285"},{"ruleId":"280","severity":1,"message":"281","line":6,"column":16,"nodeType":"282","messageId":"283","endLine":6,"endColumn":18},{"ruleId":"280","severity":1,"message":"281","line":23,"column":17,"nodeType":"282","messageId":"283","endLine":23,"endColumn":19},{"ruleId":"269","severity":1,"message":"270","line":53,"column":1,"nodeType":"271","endLine":108,"endColumn":3},{"ruleId":"272","severity":1,"message":"273","line":54,"column":3,"nodeType":"274","messageId":"275","endLine":106,"endColumn":4},{"ruleId":"280","severity":1,"message":"281","line":78,"column":20,"nodeType":"282","messageId":"283","endLine":78,"endColumn":22},{"ruleId":"263","severity":1,"message":"286","line":12,"column":10,"nodeType":"265","messageId":"266","endLine":12,"endColumn":27},{"ruleId":"269","severity":1,"message":"270","line":5,"column":1,"nodeType":"271","endLine":12,"endColumn":3},{"ruleId":"272","severity":1,"message":"273","line":6,"column":3,"nodeType":"274","messageId":"275","endLine":10,"endColumn":4},{"ruleId":"263","severity":1,"message":"287","line":4,"column":15,"nodeType":"265","messageId":"266","endLine":4,"endColumn":24},{"ruleId":"263","severity":1,"message":"288","line":8,"column":5,"nodeType":"265","messageId":"266","endLine":8,"endColumn":9},{"ruleId":"263","severity":1,"message":"289","line":9,"column":5,"nodeType":"265","messageId":"266","endLine":9,"endColumn":9},{"ruleId":"263","severity":1,"message":"290","line":10,"column":5,"nodeType":"265","messageId":"266","endLine":10,"endColumn":16},{"ruleId":"263","severity":1,"message":"291","line":11,"column":5,"nodeType":"265","messageId":"266","endLine":11,"endColumn":15},{"ruleId":"263","severity":1,"message":"292","line":12,"column":5,"nodeType":"265","messageId":"266","endLine":12,"endColumn":12},{"ruleId":"263","severity":1,"message":"293","line":13,"column":5,"nodeType":"265","messageId":"266","endLine":13,"endColumn":15},{"ruleId":"280","severity":1,"message":"281","line":51,"column":34,"nodeType":"282","messageId":"283","endLine":51,"endColumn":36},{"ruleId":"269","severity":1,"message":"270","line":7,"column":1,"nodeType":"271","endLine":27,"endColumn":3},{"ruleId":"272","severity":1,"message":"273","line":8,"column":3,"nodeType":"274","messageId":"275","endLine":24,"endColumn":4},{"ruleId":"259","severity":1,"message":"260","line":33,"column":6,"nodeType":"261","endLine":33,"endColumn":8,"suggestions":"294"},{"ruleId":"280","severity":1,"message":"281","line":224,"column":40,"nodeType":"282","messageId":"283","endLine":224,"endColumn":42},{"ruleId":"269","severity":1,"message":"270","line":7,"column":1,"nodeType":"271","endLine":14,"endColumn":3},{"ruleId":"272","severity":1,"message":"273","line":8,"column":3,"nodeType":"274","messageId":"275","endLine":12,"endColumn":4},{"ruleId":"259","severity":1,"message":"260","line":20,"column":6,"nodeType":"261","endLine":20,"endColumn":8,"suggestions":"295"},{"ruleId":"263","severity":1,"message":"296","line":47,"column":11,"nodeType":"265","messageId":"266","endLine":47,"endColumn":14},{"ruleId":"269","severity":1,"message":"270","line":7,"column":1,"nodeType":"271","endLine":14,"endColumn":3},{"ruleId":"272","severity":1,"message":"273","line":8,"column":3,"nodeType":"274","messageId":"275","endLine":12,"endColumn":4},"no-native-reassign",["297"],"no-negated-in-lhs",["298"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["299"],"no-unused-vars","'Jumbotron' is defined but never used.","Identifier","unusedVar","'error' is assigned a value but never used.","'setError' is assigned a value but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'FloatingLabel' is defined but never used.","'Modal' is defined but never used.","'Button' is defined but never used.","'getAllCategory' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["297"],["298"],"'generatePublicUrl' is defined but never used.","'Container' is defined but never used.","'show' is assigned a value but never used.","'size' is assigned a value but never used.","'handleClose' is assigned a value but never used.","'modalTitle' is assigned a value but never used.","'btnName' is assigned a value but never used.","'handleSave' is assigned a value but never used.",["300"],["301"],"'res' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"302","fix":"303"},{"desc":"304","fix":"305"},{"desc":"304","fix":"306"},"Update the dependencies array to be: [auth.authenticate, dispatch]",{"range":"307","text":"308"},"Update the dependencies array to be: [dispatch]",{"range":"309","text":"310"},{"range":"311","text":"310"},[1727,1746],"[auth.authenticate, dispatch]",[1299,1301],"[dispatch]",[804,806]]