[{"C:\\Users\\pabinlimbu\\Documents\\personal-projects\\mnm\\mnm-frontend-admin\\src\\index.js":"1","C:\\Users\\pabinlimbu\\Documents\\personal-projects\\mnm\\mnm-frontend-admin\\src\\reportWebVitals.js":"2","C:\\Users\\pabinlimbu\\Documents\\personal-projects\\mnm\\mnm-frontend-admin\\src\\App.js":"3","C:\\Users\\pabinlimbu\\Documents\\personal-projects\\mnm\\mnm-frontend-admin\\src\\store\\store.js":"4","C:\\Users\\pabinlimbu\\Documents\\personal-projects\\mnm\\mnm-frontend-admin\\src\\store\\actions\\auth.actons.js":"5","C:\\Users\\pabinlimbu\\Documents\\personal-projects\\mnm\\mnm-frontend-admin\\src\\container\\home\\home.js":"6","C:\\Users\\pabinlimbu\\Documents\\personal-projects\\mnm\\mnm-frontend-admin\\src\\container\\signup\\signup.js":"7","C:\\Users\\pabinlimbu\\Documents\\personal-projects\\mnm\\mnm-frontend-admin\\src\\components\\HOC\\privateRoute.js":"8","C:\\Users\\pabinlimbu\\Documents\\personal-projects\\mnm\\mnm-frontend-admin\\src\\container\\signin\\signin.js":"9","C:\\Users\\pabinlimbu\\Documents\\personal-projects\\mnm\\mnm-frontend-admin\\src\\store\\reducers\\rootReducer.js":"10","C:\\Users\\pabinlimbu\\Documents\\personal-projects\\mnm\\mnm-frontend-admin\\src\\store\\actions\\constaints.js":"11","C:\\Users\\pabinlimbu\\Documents\\personal-projects\\mnm\\mnm-frontend-admin\\src\\helper\\axios.js":"12","C:\\Users\\pabinlimbu\\Documents\\personal-projects\\mnm\\mnm-frontend-admin\\src\\store\\reducers\\user.reducer.js":"13","C:\\Users\\pabinlimbu\\Documents\\personal-projects\\mnm\\mnm-frontend-admin\\src\\store\\actions\\user.actions.js":"14","C:\\Users\\pabinlimbu\\Documents\\personal-projects\\mnm\\mnm-frontend-admin\\src\\store\\reducers\\auth.reducers.js":"15","C:\\Users\\pabinlimbu\\Documents\\personal-projects\\mnm\\mnm-frontend-admin\\src\\components\\layout\\layout.js":"16","C:\\Users\\pabinlimbu\\Documents\\personal-projects\\mnm\\mnm-frontend-admin\\src\\components\\ui\\input\\input.js":"17","C:\\Users\\pabinlimbu\\Documents\\personal-projects\\mnm\\mnm-frontend-admin\\src\\urlConfig.js":"18","C:\\Users\\pabinlimbu\\Documents\\personal-projects\\mnm\\mnm-frontend-admin\\src\\components\\header\\header.js":"19","C:\\Users\\pabinlimbu\\Documents\\personal-projects\\mnm\\mnm-frontend-admin\\src\\container\\Category\\index.js":"20","C:\\Users\\pabinlimbu\\Documents\\personal-projects\\mnm\\mnm-frontend-admin\\src\\components\\ui\\modal\\index.js":"21","C:\\Users\\pabinlimbu\\Documents\\personal-projects\\mnm\\mnm-frontend-admin\\src\\store\\actions\\index.js":"22","C:\\Users\\pabinlimbu\\Documents\\personal-projects\\mnm\\mnm-frontend-admin\\src\\store\\actions\\initialData.actions.js":"23","C:\\Users\\pabinlimbu\\Documents\\personal-projects\\mnm\\mnm-frontend-admin\\src\\store\\reducers\\category.reducers.js":"24","C:\\Users\\pabinlimbu\\Documents\\personal-projects\\mnm\\mnm-frontend-admin\\src\\store\\actions\\category.action.js":"25","C:\\Users\\pabinlimbu\\Documents\\personal-projects\\mnm\\mnm-frontend-admin\\src\\container\\Product\\index.js":"26","C:\\Users\\pabinlimbu\\Documents\\personal-projects\\mnm\\mnm-frontend-admin\\src\\store\\reducers\\product.reducers.js":"27","C:\\Users\\pabinlimbu\\Documents\\personal-projects\\mnm\\mnm-frontend-admin\\src\\store\\actions\\product.actions.js":"28","C:\\Users\\pabinlimbu\\Documents\\personal-projects\\mnm\\mnm-frontend-admin\\src\\container\\Category\\components\\updateCategoriesModal.js":"29","C:\\Users\\pabinlimbu\\Documents\\personal-projects\\mnm\\mnm-frontend-admin\\src\\container\\Category\\components\\UpdateCategoriesModal.js":"30","C:\\Users\\pabinlimbu\\Documents\\personal-projects\\mnm\\mnm-frontend-admin\\src\\container\\Category\\components\\AddCategoryModal.js":"31","C:\\Users\\pabinlimbu\\Documents\\personal-projects\\mnm\\mnm-frontend-admin\\src\\container\\Category\\components\\DeleteCategoryModal.js":"32","C:\\Users\\pabinlimbu\\Documents\\personal-projects\\mnm\\mnm-frontend-admin\\src\\components\\ui\\modal\\MyModal.js":"33","C:\\Users\\pabinlimbu\\Documents\\personal-projects\\mnm\\mnm-frontend-admin\\src\\helper\\LinearCategories.js":"34","C:\\Users\\pabinlimbu\\Documents\\personal-projects\\mnm\\mnm-frontend-admin\\src\\store\\actions\\page.actions.js":"35","C:\\Users\\pabinlimbu\\Documents\\personal-projects\\mnm\\mnm-frontend-admin\\src\\store\\reducers\\page.reducer.js":"36","C:\\Users\\pabinlimbu\\Documents\\personal-projects\\mnm\\mnm-frontend-admin\\src\\container\\Product\\components\\EditProductModal.js":"37","C:\\Users\\pabinlimbu\\Documents\\personal-projects\\mnm\\mnm-frontend-admin\\src\\container\\Product\\components\\ProductDetailsModal.js":"38","C:\\Users\\pabinlimbu\\Documents\\personal-projects\\mnm\\mnm-frontend-admin\\src\\container\\Banner\\index.js":"39","C:\\Users\\pabinlimbu\\Documents\\personal-projects\\mnm\\mnm-frontend-admin\\src\\store\\actions\\banner.actions.js":"40","C:\\Users\\pabinlimbu\\Documents\\personal-projects\\mnm\\mnm-frontend-admin\\src\\store\\reducers\\banner.reducers.js":"41","C:\\Users\\pabinlimbu\\Documents\\personal-projects\\mnm\\mnm-frontend-admin\\src\\container\\Banner\\components\\BannerDetailsModal.js":"42","C:\\Users\\pabinlimbu\\Documents\\personal-projects\\mnm\\mnm-frontend-admin\\src\\container\\UserComments\\index.js":"43","C:\\Users\\pabinlimbu\\Documents\\personal-projects\\mnm\\mnm-frontend-admin\\src\\store\\actions\\usercomment.action.js":"44","C:\\Users\\pabinlimbu\\Documents\\personal-projects\\mnm\\mnm-frontend-admin\\src\\store\\reducers\\usercomment.reducers.js":"45","C:\\Users\\pabinlimbu\\Documents\\personal-projects\\mnm\\mnm-frontend-admin\\src\\container\\Order\\index.js":"46","C:\\Users\\pabinlimbu\\Documents\\personal-projects\\mnm\\mnm-frontend-admin\\src\\store\\actions\\order.actions.js":"47","C:\\Users\\pabinlimbu\\Documents\\personal-projects\\mnm\\mnm-frontend-admin\\src\\store\\reducers\\order.reducers.js":"48"},{"size":895,"mtime":1652693023395,"results":"49","hashOfConfig":"50"},{"size":375,"mtime":1611799130994,"results":"51","hashOfConfig":"50"},{"size":2403,"mtime":1651044017822,"results":"52","hashOfConfig":"50"},{"size":327,"mtime":1620979977716,"results":"53","hashOfConfig":"50"},{"size":1790,"mtime":1612343488450,"results":"54","hashOfConfig":"50"},{"size":283,"mtime":1612348477370,"results":"55","hashOfConfig":"50"},{"size":3090,"mtime":1611799130993,"results":"56","hashOfConfig":"50"},{"size":942,"mtime":1612423776333,"results":"57","hashOfConfig":"50"},{"size":1998,"mtime":1611799130992,"results":"58","hashOfConfig":"50"},{"size":716,"mtime":1651215076627,"results":"59","hashOfConfig":"50"},{"size":2942,"mtime":1651737955203,"results":"60","hashOfConfig":"50"},{"size":1224,"mtime":1640932769562,"results":"61","hashOfConfig":"50"},{"size":699,"mtime":1611799130997,"results":"62","hashOfConfig":"50"},{"size":705,"mtime":1611799130996,"results":"63","hashOfConfig":"50"},{"size":1090,"mtime":1612347375651,"results":"64","hashOfConfig":"50"},{"size":1314,"mtime":1651044040402,"results":"65","hashOfConfig":"50"},{"size":2988,"mtime":1647337942786,"results":"66","hashOfConfig":"50"},{"size":542,"mtime":1656129458279,"results":"67","hashOfConfig":"50"},{"size":1703,"mtime":1612343215348,"results":"68","hashOfConfig":"50"},{"size":11850,"mtime":1651210618484,"results":"69","hashOfConfig":"50"},{"size":1014,"mtime":1651221566925,"results":"70","hashOfConfig":"50"},{"size":214,"mtime":1647415252695,"results":"71","hashOfConfig":"50"},{"size":715,"mtime":1651824871814,"results":"72","hashOfConfig":"50"},{"size":3080,"mtime":1631425368595,"results":"73","hashOfConfig":"50"},{"size":2718,"mtime":1627725353205,"results":"74","hashOfConfig":"50"},{"size":9269,"mtime":1652693232080,"results":"75","hashOfConfig":"50"},{"size":341,"mtime":1612859828232,"results":"76","hashOfConfig":"50"},{"size":824,"mtime":1647163100266,"results":"77","hashOfConfig":"50"},{"size":5240,"mtime":1620635115032,"results":"78","hashOfConfig":"50"},{"size":6598,"mtime":1651824956388,"results":"79","hashOfConfig":"50"},{"size":1654,"mtime":1620907259401,"results":"80","hashOfConfig":"50"},{"size":1143,"mtime":1620647351313,"results":"81","hashOfConfig":"50"},{"size":1253,"mtime":1651825989791,"results":"82","hashOfConfig":"50"},{"size":509,"mtime":1621157608759,"results":"83","hashOfConfig":"50"},{"size":684,"mtime":1621248493752,"results":"84","hashOfConfig":"50"},{"size":610,"mtime":1621328543447,"results":"85","hashOfConfig":"50"},{"size":2291,"mtime":1646548728808,"results":"86","hashOfConfig":"50"},{"size":2303,"mtime":1646727513474,"results":"87","hashOfConfig":"50"},{"size":9326,"mtime":1652693290556,"results":"88","hashOfConfig":"50"},{"size":1054,"mtime":1651214612488,"results":"89","hashOfConfig":"50"},{"size":345,"mtime":1646723341434,"results":"90","hashOfConfig":"50"},{"size":1334,"mtime":1646990744087,"results":"91","hashOfConfig":"50"},{"size":4366,"mtime":1652693189998,"results":"92","hashOfConfig":"50"},{"size":1444,"mtime":1647447452247,"results":"93","hashOfConfig":"50"},{"size":358,"mtime":1647416258091,"results":"94","hashOfConfig":"50"},{"size":9662,"mtime":1655707723105,"results":"95","hashOfConfig":"50"},{"size":1156,"mtime":1653205347823,"results":"96","hashOfConfig":"50"},{"size":1353,"mtime":1651824621381,"results":"97","hashOfConfig":"50"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},"134qi13",{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"100"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"100"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"100"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"100"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"100"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"100"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"100"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"100"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"100"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"100"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"100"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"168","messages":"169","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"100"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"179"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184","usedDeprecatedRules":"100"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"191","usedDeprecatedRules":"100"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"196","usedDeprecatedRules":"100"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"201","usedDeprecatedRules":"100"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"204","usedDeprecatedRules":"100"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"207","usedDeprecatedRules":"100"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"210","usedDeprecatedRules":"100"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"215","usedDeprecatedRules":"100"},"C:\\Users\\pabinlimbu\\Documents\\personal-projects\\mnm\\mnm-frontend-admin\\src\\index.js",[],["216","217"],"C:\\Users\\pabinlimbu\\Documents\\personal-projects\\mnm\\mnm-frontend-admin\\src\\reportWebVitals.js",[],"C:\\Users\\pabinlimbu\\Documents\\personal-projects\\mnm\\mnm-frontend-admin\\src\\App.js",["218"],"import React, { useEffect } from \"react\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport \"./App.css\";\r\nimport home from \"./container/home/home\";\r\nimport Signin from \"./container/signin/signin\";\r\nimport Signup from \"./container/signup/signup\";\r\nimport PrivateRoute from \"./components/HOC/privateRoute\";\r\nimport Category from \"./container/Category\";\r\nimport Product from \"./container/Product\";\r\nimport Banner from \"./container/Banner\";\r\nimport UserComments from \"./container/UserComments\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { isUserLogedIn } from \"./store/actions/auth.actons\";\r\nimport { getInitialData } from \"./store/actions\";\r\nimport Order from \"./container/Order\";\r\nfunction App() {\r\n  const dispatch = useDispatch();\r\n  const auth = useSelector((state) => state.auth);\r\n  /**simillar to componentdidmount\r\n   * use effect trigget isUserLgedin fucntion --> which further trigger LOGIN_SUCCESS action if token is found in localstoreage.\r\n   * when LOGIN_SUCCESS action is erceived by reducer it sets the token and user to reduc store\r\n   * and also sets the authenticate : true even after the refresh of the page.\r\n   * The redirect function is kept signin and sign up compoent and to prevent the blink glitch\r\n   * we directly use the useeffect in root component. because root render all component.\r\n   * after page refresh the store value is also sets to initial state so to set the user token and user obj the login success is triggered again using the localstorage value.\r\n   */\r\n  useEffect(() => {\r\n    if (!auth.authenticate) {\r\n      dispatch(isUserLogedIn());\r\n    }\r\n    if (auth.authenticate) {\r\n      dispatch(getInitialData());\r\n    }\r\n  }, [auth.authenticate]);\r\n  return (\r\n    <div className=\"App\">\r\n      <Router>\r\n        <Switch>\r\n          <PrivateRoute exact path=\"/\" component={home} />\r\n          <PrivateRoute path=\"/category\" component={Category} />\r\n          <PrivateRoute path=\"/products\" component={Product} />\r\n          <PrivateRoute path=\"/banner\" component={Banner} />\r\n          <PrivateRoute path=\"/comments\" component={UserComments} />\r\n          <Route exact path=\"/signin\" component={Signin} />\r\n          <Route exact path=\"/signup\" component={Signup} />\r\n          <Route exact path=\"/order\" component={Order} />\r\n        </Switch>\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\pabinlimbu\\Documents\\personal-projects\\mnm\\mnm-frontend-admin\\src\\store\\store.js",[],"C:\\Users\\pabinlimbu\\Documents\\personal-projects\\mnm\\mnm-frontend-admin\\src\\store\\actions\\auth.actons.js",[],"C:\\Users\\pabinlimbu\\Documents\\personal-projects\\mnm\\mnm-frontend-admin\\src\\container\\home\\home.js",["219"],"import React from \"react\";\r\nimport Layout from \"../../components/layout/layout\";\r\nimport { Jumbotron } from \"react-bootstrap\";\r\n\r\nconst home = () => {\r\n  return (\r\n    <div>\r\n      <Layout sidebar>\r\n        <p>Home</p>\r\n      </Layout>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default home;\r\n","C:\\Users\\pabinlimbu\\Documents\\personal-projects\\mnm\\mnm-frontend-admin\\src\\container\\signup\\signup.js",["220","221"],"import React, { useState } from \"react\";\r\nimport { Container, Form, Row, Col, Button } from \"react-bootstrap\";\r\nimport Layout from \"../../components/layout/layout\";\r\nimport Input from \"../../components/ui/input/input\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { signup } from \"../../store/actions/user.actions\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nfunction Signup() {\r\n  const [firstName, setFirstName] = useState(\"\");\r\n  const [lastName, setLastName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  const auth = useSelector((state) => state.auth); //fetch state.auth as state from store.\r\n  const user = useSelector((state) => state.user); //this user is a reducer name in root reducer.\r\n\r\n  const dispatch = useDispatch();\r\n  const userSignUp = (e) => {\r\n    e.preventDefault();\r\n    const user = { firstName, lastName, email, password };\r\n    dispatch(signup(user));\r\n  };\r\n\r\n  if (user.loading) {\r\n    return <p>loading...</p>;\r\n  }\r\n  //if user is loged in redirect to dashboard\r\n  if (auth.authenticate) {\r\n    return <Redirect to={\"/\"} />;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Layout>\r\n        <Container>\r\n          <Row style={{ marginTop: \"60px\" }}>\r\n            <Col md={{ span: 6, offset: 3 }}>\r\n              <Form onSubmit={userSignUp}>\r\n                <Row>\r\n                  <Col md={6}>\r\n                    <Input\r\n                      label=\"First Name\"\r\n                      placeholder=\"First Name\"\r\n                      value={firstName}\r\n                      type=\"text\"\r\n                      onChange={(e) => {\r\n                        setFirstName(e.target.value);\r\n                      }}\r\n                    />\r\n                  </Col>\r\n                  <Col md={6}>\r\n                    <Input\r\n                      label=\"Last Name\"\r\n                      placeholder=\"Last Name\"\r\n                      value={lastName}\r\n                      type=\"text\"\r\n                      onChange={(e) => {\r\n                        setLastName(e.target.value);\r\n                      }}\r\n                    />\r\n                  </Col>\r\n                </Row>\r\n                <Input\r\n                  label=\"Email\"\r\n                  placeholder=\"Email\"\r\n                  value={email}\r\n                  type=\"Email\"\r\n                  onChange={(e) => {\r\n                    setEmail(e.target.value);\r\n                  }}\r\n                />\r\n\r\n                <Input\r\n                  label=\"Password\"\r\n                  placeholder=\"Password\"\r\n                  value={password}\r\n                  type=\"Password\"\r\n                  onChange={(e) => {\r\n                    setPassword(e.target.value);\r\n                  }}\r\n                />\r\n\r\n                <Button variant=\"primary\" type=\"submit\">\r\n                  Submit\r\n                </Button>\r\n              </Form>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </Layout>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Signup;\r\n","C:\\Users\\pabinlimbu\\Documents\\personal-projects\\mnm\\mnm-frontend-admin\\src\\components\\HOC\\privateRoute.js",[],"C:\\Users\\pabinlimbu\\Documents\\personal-projects\\mnm\\mnm-frontend-admin\\src\\container\\signin\\signin.js",[],"C:\\Users\\pabinlimbu\\Documents\\personal-projects\\mnm\\mnm-frontend-admin\\src\\store\\reducers\\rootReducer.js",[],"C:\\Users\\pabinlimbu\\Documents\\personal-projects\\mnm\\mnm-frontend-admin\\src\\store\\actions\\constaints.js",[],"C:\\Users\\pabinlimbu\\Documents\\personal-projects\\mnm\\mnm-frontend-admin\\src\\helper\\axios.js",[],"C:\\Users\\pabinlimbu\\Documents\\personal-projects\\mnm\\mnm-frontend-admin\\src\\store\\reducers\\user.reducer.js",["222","223"],"import { userConstants } from \"../actions/constaints\";\r\n\r\nconst initState = { error: null, message: \"\", loading: false };\r\nexport default (state = initState, action) => {\r\n  switch (action.type) {\r\n    case userConstants.USER_REGISTER_REQUEST:\r\n      state = {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n      break;\r\n    case userConstants.USER_REGISTER_SUCCESS:\r\n      state = {\r\n        ...state,\r\n        loading: false,\r\n        message: action.payload.message,\r\n      };\r\n      break;\r\n    case userConstants.USER_REGISTER_FAILURE:\r\n      state = {\r\n        ...state,\r\n        loading: false,\r\n        error: action.payload.error,\r\n      };\r\n      break;\r\n  }\r\n  return state;\r\n};\r\n","C:\\Users\\pabinlimbu\\Documents\\personal-projects\\mnm\\mnm-frontend-admin\\src\\store\\actions\\user.actions.js",[],"C:\\Users\\pabinlimbu\\Documents\\personal-projects\\mnm\\mnm-frontend-admin\\src\\store\\reducers\\auth.reducers.js",["224","225"],"import { authConstants } from \"../actions/constaints\";\r\nconst initState = {\r\n  token: null,\r\n  user: { firstName: \"\", lastName: \"\", email: \"\", picture: \"\" },\r\n  authenticate: false,\r\n  authenticating: false,\r\n  loading: false,\r\n};\r\n\r\nexport default (state = initState, action) => {\r\n  console.log(action);\r\n  switch (action.type) {\r\n    case authConstants.LOGIN_REQUEST:\r\n      state = { ...state, authenticating: true };\r\n      break;\r\n    case authConstants.LOGIN_SUCCESS:\r\n      state = {\r\n        ...state,\r\n        user: action.payload.user,\r\n        token: action.payload.token,\r\n        authenticate: true,\r\n        authenticating: false,\r\n      };\r\n      break;\r\n\r\n    case authConstants.LOGOUT_REQUEST:\r\n      state = {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n      break;\r\n    case authConstants.LOGOUT_SUCCESS:\r\n      state = {\r\n        ...initState,\r\n      };\r\n      break;\r\n    case authConstants.LOGOUT_FAILURE:\r\n      state = {\r\n        ...state,\r\n        error: action.payload.error,\r\n        loading: false,\r\n      };\r\n      break;\r\n  }\r\n  return state;\r\n};\r\n","C:\\Users\\pabinlimbu\\Documents\\personal-projects\\mnm\\mnm-frontend-admin\\src\\components\\layout\\layout.js",[],"C:\\Users\\pabinlimbu\\Documents\\personal-projects\\mnm\\mnm-frontend-admin\\src\\components\\ui\\input\\input.js",["226"],"import { FloatingLabel, Form } from \"react-bootstrap\";\r\nimport React from \"react\";\r\n\r\nconst Input = (props) => {\r\n  let input = null;\r\n  switch (props.type) {\r\n    case \"select\":\r\n      input = (\r\n        <Form.Group controlId=\"\">\r\n          {props.label && <Form.Label>{props.label}</Form.Label>}\r\n\r\n          <select\r\n            className=\"form-control form-control-sm\"\r\n            name=\"\"\r\n            id=\"\"\r\n            value={props.value}\r\n            onChange={props.onChange}\r\n          >\r\n            <option\r\n              value={\r\n                props.currentProduct ? props.currentProduct.category._id : \"\"\r\n              }\r\n            >\r\n              {props.currentProduct\r\n                ? props.currentProduct.category.name\r\n                : props.placeholder}\r\n            </option>\r\n            {props.options.length > 0\r\n              ? props.options.map((option, index) => (\r\n                  <option key={index} value={option._id}>\r\n                    {option.name}\r\n                  </option>\r\n                ))\r\n              : null}\r\n          </select>\r\n        </Form.Group>\r\n      );\r\n      break;\r\n    case \"text\":\r\n      break;\r\n    case \"check\":\r\n      input = (\r\n        <Form.Group className=\"mb-3\" controlId=\"formBasicCheckbox\">\r\n          <Form.Check\r\n            type=\"checkbox\"\r\n            label={props.label}\r\n            checked={props.value}\r\n            onChange={props.onChange}\r\n          />\r\n        </Form.Group>\r\n      );\r\n      break;\r\n    case \"textArea\":\r\n      input = (\r\n        <Form.Group controlId=\"\">\r\n          {props.label && <Form.Label>{props.label}</Form.Label>}\r\n          <Form.Text className=\"text-muted\">{props.errorMessage}</Form.Text>\r\n          <Form.Control\r\n            as=\"textarea\"\r\n            placeholder={props.placeholder}\r\n            style={{ height: \"100px\" }}\r\n            value={props.value}\r\n            onChange={props.onChange}\r\n          />\r\n        </Form.Group>\r\n      );\r\n      break;\r\n\r\n    default:\r\n      input = (\r\n        <Form.Group controlId=\"\">\r\n          {props.label && <Form.Label>{props.label}</Form.Label>}\r\n\r\n          <Form.Control\r\n            type={props.type}\r\n            placeholder={props.placeholder}\r\n            value={props.value}\r\n            onChange={props.onChange}\r\n            {...props}\r\n          />\r\n          <Form.Text className=\"text-muted\">{props.errorMessage}</Form.Text>\r\n        </Form.Group>\r\n      );\r\n      break;\r\n  }\r\n\r\n  // return (\r\n  //   <div>\r\n  //     <Form.Group controlId=\"\">\r\n  //       {props.label && <Form.Label>{props.label}</Form.Label>}\r\n\r\n  //       <Form.Control\r\n  //         type={props.type}\r\n  //         placeholder={props.placeholder}\r\n  //         value={props.value}\r\n  //         onChange={props.onChange}\r\n  //         {...props}\r\n  //       />\r\n  //       <Form.Text className=\"text-muted\">{props.errorMessage}</Form.Text>\r\n  //     </Form.Group>\r\n  //   </div>\r\n  // );\r\n  return input;\r\n};\r\n\r\nexport default Input;\r\n","C:\\Users\\pabinlimbu\\Documents\\personal-projects\\mnm\\mnm-frontend-admin\\src\\urlConfig.js",[],"C:\\Users\\pabinlimbu\\Documents\\personal-projects\\mnm\\mnm-frontend-admin\\src\\components\\header\\header.js",[],"C:\\Users\\pabinlimbu\\Documents\\personal-projects\\mnm\\mnm-frontend-admin\\src\\container\\Category\\index.js",["227","228","229","230","231","232","233","234","235"],"import React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Col, Container, Row, Modal, Button } from \"react-bootstrap\";\r\nimport Layout from \"../../components/layout/layout\";\r\nimport {\r\n  addCategory,\r\n  getAllCategory,\r\n  updateCategories,\r\n  deleteCategories as deleteCategoryAction,\r\n} from \"../../store/actions\";\r\nimport {\r\n  IoIosAdd,\r\n  IoIosCheckboxOutline,\r\n  IoIosCreate,\r\n  IoIosSquareOutline,\r\n  IoIosTrash,\r\n} from \"react-icons/io\";\r\nimport { IoChevronForwardOutline, IoChevronDownOutline } from \"react-icons/io5\";\r\n// check box tree Import\r\nimport CheckboxTree from \"react-checkbox-tree\";\r\nimport \"react-checkbox-tree/lib/react-checkbox-tree.css\";\r\n// check box tree Import END\r\nimport \"./style.css\";\r\nimport UpdateCategoryModal from \"./components/UpdateCategoriesModal\";\r\nimport AddCategoryModal from \"./components/AddCategoryModal\";\r\nimport DeleteCategoryModal from \"./components/DeleteCategoryModal\";\r\n\r\nfunction Category() {\r\n  /**State variables */\r\n  const [show, setShow] = useState(false);\r\n  const [categoryName, setCategoryName] = useState(\"\");\r\n  const [parentCategoryId, setParentCategoryId] = useState(\"\");\r\n  const [categoryImage, setCategoryImage] = useState(\"\");\r\n  // checkbox tree state variable.\r\n  const [checked, setChecked] = useState([]);\r\n  const [expanded, setExpanded] = useState([]);\r\n  const [checkedArray, setCheckedArray] = useState([]);\r\n  const [expandedArray, setExpandedArray] = useState([]);\r\n  /**State variables END */\r\n\r\n  // update cat MODAL\r\n  const [updateCategoryModal, setUpdateCategoryModal] = useState(false);\r\n  // update cat MODAL END\r\n  const [showDeleteModal, setShowDeleteModal] = useState(false);\r\n\r\n  const dispatch = useDispatch();\r\n  const category = useSelector((state) => state.category);\r\n\r\n  useEffect(() => {\r\n    if (!category.loading) {\r\n      setCategoryName(\"\");\r\n      setParentCategoryId(\"\");\r\n      setCategoryImage(\"\");\r\n      setShow(false);\r\n    }\r\n  }, [category.loading]);\r\n\r\n  /**category drop down list */\r\n  const createCtegorylist = (categories, options = []) => {\r\n    for (let category of categories) {\r\n      options.push({\r\n        value: category._id,\r\n        name: category.name,\r\n        parentId: category.parentId,\r\n        type: category.type,\r\n        isfeatured: category.isfeatured ? category.isfeatured : false,\r\n      });\r\n      if (category.children.length > 0) {\r\n        createCtegorylist(category.children, options);\r\n      }\r\n    }\r\n    return options;\r\n  };\r\n  /**category drop down list END */\r\n\r\n  /**Category modal */\r\n  const handleClose = (e) => {\r\n    setCategoryName(\"\");\r\n    setParentCategoryId(\"\");\r\n    setCategoryImage(\"\");\r\n    setShow(false);\r\n  };\r\n\r\n  const submitAddCategoryForm = () => {\r\n    if (categoryName === \"\") {\r\n      console.log(\"Cateory name Cannot be empty\");\r\n\r\n      return;\r\n    }\r\n    const form = new FormData();\r\n    form.append(\"name\", categoryName);\r\n    form.append(\"parentId\", parentCategoryId);\r\n    form.append(\"categoryImage\", categoryImage);\r\n    //console.log(form.get(\"name\"));\r\n    dispatch(addCategory(form));\r\n  };\r\n\r\n  const handleShow = () => setShow(true);\r\n  /**category modal End */\r\n\r\n  // UPDATE CATEGORY MODAL > BTN\r\n  const updateCategory = () => {\r\n    updateCheckedAndExpandedCategories();\r\n    setUpdateCategoryModal(true);\r\n  };\r\n  //  UPDATE CATEGORY MODAL > BTN END\r\n\r\n  const updateCheckedAndExpandedCategories = () => {\r\n    const categories = createCtegorylist(category.categories);\r\n    const checkedArray = [];\r\n    const expandedArray = [];\r\n\r\n    //get whole object info for checked and expanded array\r\n    checked.length > 0 &&\r\n      checked.forEach((categoryId, index) => {\r\n        const category = categories.find(\r\n          (category, _index) => categoryId == category.value\r\n        );\r\n        category && checkedArray.push(category);\r\n      });\r\n    expanded.length > 0 &&\r\n      expanded.forEach((categoryId, index) => {\r\n        const category = categories.find(\r\n          (category, _index) => categoryId == category.value\r\n        );\r\n        category && expandedArray.push(category);\r\n      });\r\n    //update corresponding state variable.\r\n    setCheckedArray(checkedArray);\r\n    setExpandedArray(expandedArray);\r\n\r\n    //console.log({ checked, expanded, categories, checkedArray, expandedArray });\r\n  };\r\n\r\n  //submit update-category form\r\n  const submitUpdateCategoriesForm = () => {\r\n    const form = new FormData();\r\n    expandedArray.forEach((item, index) => {\r\n      form.append(\"_id\", item.value);\r\n      form.append(\"name\", item.name);\r\n      form.append(\"parentId\", item.parentId ? item.parentId : null);\r\n      form.append(\"type\", item.type);\r\n      form.append(\"isfeatured\", item.isfeatured ? item.isfeatured : false);\r\n    });\r\n\r\n    checkedArray.forEach((item, index) => {\r\n      form.append(\"_id\", item.value);\r\n      form.append(\"name\", item.name);\r\n      form.append(\"parentId\", item.parentId ? item.parentId : null);\r\n      form.append(\"type\", item.type);\r\n      form.append(\"isfeatured\", item.isfeatured ? item.isfeatured : false);\r\n    });\r\n\r\n    // for (var pair of form) {\r\n    //   //  console.log(pair[0] + \", \" + pair[1]);\r\n    //   console.log(pair);\r\n    // }\r\n\r\n    dispatch(updateCategories(form));\r\n    // .then((result) => {\r\n    //   if (result) {\r\n    //     //directly dispatching if success , less expensive call and less recusion.\r\n    //     // in other case we would carry below dispatch from the category action inside updatecategories api.\r\n    //     dispatch(getAllCategory());\r\n    //   }\r\n    //   if (!result) {\r\n    //     console.log(\"Error at category-- updatecategories -- dispatch\");\r\n    //   }\r\n    // });\r\n    setUpdateCategoryModal(false);\r\n  };\r\n  //submit update-category form End\r\n\r\n  // handleEditCategoryInput / bind input on change with react state.\r\n  const handleEditCategoryInput = (key, value, index, type) => {\r\n    if (type == \"checked\") {\r\n      const updatedCheckedArray = checkedArray.map((item, _index) => {\r\n        if (index == _index) {\r\n          return { ...item, [key]: value };\r\n        }\r\n        return item;\r\n      });\r\n\r\n      setCheckedArray(updatedCheckedArray);\r\n    } else if (type == \"expanded\") {\r\n      const updatedExpandedArray = expandedArray.map((item, _index) =>\r\n        index == _index ? { ...item, [key]: value } : item\r\n      );\r\n      setExpandedArray(updatedExpandedArray);\r\n    }\r\n  };\r\n\r\n  // handleEditCategoryInput / bind input on change with react state. END\r\n\r\n  /**CREATE CATEGORY AND ITS SUB CATEGORY -- to render in checkbox tree  */\r\n  const renderCategories = (categories) => {\r\n    let categoryList = [];\r\n    for (let category of categories) {\r\n      categoryList.push({\r\n        label: category.name,\r\n        value: category._id,\r\n        children:\r\n          category.children.length > 0 && renderCategories(category.children),\r\n      });\r\n    }\r\n    return categoryList;\r\n  };\r\n  /**CREATE CATEGORY AND ITS SUB CATEGORY -- to render in checkbox tree END */\r\n\r\n  //DELETE CATEGORY MODAL--open\r\n  const deleteCategory = () => {\r\n    updateCheckedAndExpandedCategories();\r\n    setShowDeleteModal(true);\r\n    console.log(checkedArray, expandedArray);\r\n  };\r\n\r\n  //function to fialize category delete.\r\n  const deleteCategories = () => {\r\n    setShowDeleteModal(false);\r\n    const checkedIdsArray = checkedArray.map((item, index) => {\r\n      return { _id: item.value };\r\n    });\r\n    if (checkedArray.length > 0) {\r\n      dispatch(deleteCategoryAction(checkedIdsArray));\r\n    }\r\n  };\r\n\r\n  const handleCloseCategoryModal = () => {\r\n    setUpdateCategoryModal(false);\r\n  };\r\n\r\n  // const renderTest = () => {\r\n  //   return (\r\n  //     <Modal show={test}>\r\n  //       <Modal.Header closeButton>\r\n  //         <Modal.Title>Modal heading</Modal.Title>\r\n  //       </Modal.Header>\r\n  //       <Modal.Body>Woohoo, you're reading this text in a modal!</Modal.Body>\r\n  //       <Modal.Footer>\r\n  //         <Button variant=\"secondary\" onClick={handleClose}>\r\n  //           Close\r\n  //         </Button>\r\n  //         <Button variant=\"primary\" onClick={handleClose}>\r\n  //           Save Changes\r\n  //         </Button>\r\n  //       </Modal.Footer>\r\n  //     </Modal>\r\n  //   );\r\n  // };\r\n\r\n  const categoryList = createCtegorylist(category.categories);\r\n  return (\r\n    <Layout sidebar>\r\n      <Container>\r\n        <Row>\r\n          <Col sm={12}>\r\n            <div className=\"d-flex flex-column flex-md-row justify-content-md-between\">\r\n              <h3>Category</h3>\r\n              <div className=\"actionBtnContainer\">\r\n                <span className=\"d-none d-md-block\">Actions: </span>\r\n                <button onClick={handleShow}>\r\n                  <IoIosAdd /> <span> Add </span>\r\n                </button>\r\n                <button onClick={updateCategory}>\r\n                  <IoIosCreate /> <span>Edit</span>\r\n                </button>\r\n                <button onClick={deleteCategory}>\r\n                  <IoIosTrash /> <span>Delete</span>\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col sm={12}>\r\n            {/* {renderCategories(category.categories)} */}\r\n            <CheckboxTree\r\n              nodes={renderCategories(category.categories)}\r\n              checked={checked}\r\n              expanded={expanded}\r\n              onCheck={(checked) => setChecked(checked)}\r\n              onExpand={(expanded) => setExpanded(expanded)}\r\n              icons={{\r\n                check: <IoIosCheckboxOutline />,\r\n                uncheck: <IoIosSquareOutline />,\r\n                // halfCheck: <IoIosCheckboxOutline />,\r\n                expandClose: <IoChevronForwardOutline />,\r\n                expandOpen: <IoChevronDownOutline />,\r\n                // expandAll: <IoIosCheckboxOutline />,\r\n                // collapseAll: <IoIosCheckboxOutline />,\r\n                // parentClose: <IoIosCheckboxOutline />,\r\n                // parentOpen: <IoIosCheckboxOutline />,\r\n                // leaf: <IoIosCheckboxOutline />,\r\n              }}\r\n            />\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n\r\n      {/*REDNER ADD CATEGORY MODAL */}\r\n      <AddCategoryModal\r\n        show={show}\r\n        handleClose={handleClose}\r\n        modalTitle=\"Add new category\"\r\n        btnName=\"save\"\r\n        handleSave={submitAddCategoryForm}\r\n        categoryList={categoryList}\r\n        setCategoryName={setCategoryName}\r\n        parentCategoryId={parentCategoryId}\r\n        categoryName={categoryName}\r\n        setParentCategoryId={setParentCategoryId}\r\n      />\r\n      {/* RENDER UPDATE CATEGORY MODAL */}\r\n      <UpdateCategoryModal\r\n        show={updateCategoryModal}\r\n        handleClose={handleCloseCategoryModal}\r\n        modaltitle=\"EDIT category\"\r\n        btnName=\"save Category\"\r\n        size=\"lg\"\r\n        handleSave={submitUpdateCategoriesForm}\r\n        handleEditCategoryInput={handleEditCategoryInput}\r\n        expandedArray={expandedArray}\r\n        checkedArray={checkedArray}\r\n        categoryList={categoryList}\r\n      />\r\n\r\n      {/*DELETE CATEGORY MODAL */}\r\n      <DeleteCategoryModal\r\n        show={showDeleteModal}\r\n        handleClose={() => setShowDeleteModal(false)}\r\n        modalTitle=\"Delete Confirmation\"\r\n        btnName=\"Delete category\"\r\n        //handleSave={sumbitDeleteCategoryForm}\r\n        buttons={[\r\n          {\r\n            label: \"No\",\r\n            color: \"primary\",\r\n            onClick: () => {\r\n              setShowDeleteModal(false);\r\n            },\r\n          },\r\n          {\r\n            label: \"Yes\",\r\n            color: \"danger\",\r\n            onClick: deleteCategories,\r\n          },\r\n        ]}\r\n        expandedArray={expandedArray}\r\n        checkedArray={checkedArray}\r\n      />\r\n    </Layout>\r\n  );\r\n}\r\nexport default Category;\r\n","C:\\Users\\pabinlimbu\\Documents\\personal-projects\\mnm\\mnm-frontend-admin\\src\\components\\ui\\modal\\index.js",[],"C:\\Users\\pabinlimbu\\Documents\\personal-projects\\mnm\\mnm-frontend-admin\\src\\store\\actions\\index.js",[],"C:\\Users\\pabinlimbu\\Documents\\personal-projects\\mnm\\mnm-frontend-admin\\src\\store\\actions\\initialData.actions.js",[],"C:\\Users\\pabinlimbu\\Documents\\personal-projects\\mnm\\mnm-frontend-admin\\src\\store\\reducers\\category.reducers.js",["236","237","238","239"],"import { categoryConstant } from \"../actions/constaints\";\r\nconst initState = { categories: [], loading: false };\r\n\r\nconst buildNewCategory = (parentId, categories, category) => {\r\n  //check if caegory is parent itself. where parentId is udefined\r\n  if (parentId == undefined) {\r\n    return [\r\n      ...categories,\r\n      {\r\n        _id: category._id,\r\n        name: category.name,\r\n        slug: category.slug,\r\n        type: category.type,\r\n        isfeatured: category.isfeatured,\r\n        children: [],\r\n      },\r\n    ];\r\n  }\r\n\r\n  let myCategories = [];\r\n  for (let cat of categories) {\r\n    //compare parent id with parent category.\r\n    if (cat._id == parentId) {\r\n      const newCategory = {\r\n        _id: category._id,\r\n        name: category.name,\r\n        slug: category.slug,\r\n        parentId: category.parentId,\r\n        type: category.type,\r\n        isfeatured: category.isfeatured,\r\n        children: [],\r\n      };\r\n\r\n      myCategories.push({\r\n        ...cat,\r\n        children:\r\n          cat.children.length > 0\r\n            ? [...cat.children, newCategory]\r\n            : [newCategory],\r\n      });\r\n    } else {\r\n      myCategories.push({\r\n        ...cat,\r\n        children: cat.children\r\n          ? buildNewCategory(parentId, cat.children, category)\r\n          : [],\r\n      });\r\n    }\r\n  }\r\n  return myCategories; //treversig list.\r\n};\r\n\r\nexport default (state = initState, action) => {\r\n  switch (action.type) {\r\n    case categoryConstant.GET_ALL_CATEGORY_SUCCESS:\r\n      state = { ...state, categories: action.payload.categories };\r\n\r\n      break;\r\n    case categoryConstant.ADD_NEW_CATEGORY_REQUEST:\r\n      state = { ...state, loading: true };\r\n      break;\r\n\r\n    case categoryConstant.ADD_NEW_CATEGORY_SUCCESS:\r\n      const catrgory = action.payload.category;\r\n      //we are sending parent id --> current category List and newly added category.\r\n      const updatedCategories = buildNewCategory(\r\n        catrgory.parentId,\r\n        state.categories,\r\n        catrgory\r\n      );\r\n      state = {\r\n        ...state,\r\n        categories: updatedCategories,\r\n\r\n        \r\n        loading: false,\r\n      };\r\n      break;\r\n\r\n    case categoryConstant.ADD_NEW_CATEGORY_FAILURE:\r\n      state = { ...state, loading: false, error: action.payload.error };\r\n      break;\r\n\r\n    //UPDATE CASES\r\n    case categoryConstant.UPDATE_CATEGORY_REQUEST:\r\n      state = { ...state, loading: true };\r\n      break;\r\n\r\n    case categoryConstant.UPDATE_CATEGORY_SUCCESS:\r\n      state = { ...state, loading: false };\r\n      break;\r\n    case categoryConstant.UPDATE_CATEGORY_FAILURE:\r\n      state = { ...state, error: action.payload.error, loading: false };\r\n      break;\r\n    //DELETE CASES\r\n    case categoryConstant.DELETE_CATEGORY_REQUEST:\r\n      state = { ...state, loading: true };\r\n      break;\r\n\r\n    case categoryConstant.DELETE_CATEGORY_SUCCESS:\r\n      state = { ...state, loading: false };\r\n      break;\r\n    case categoryConstant.DELETE_CATEGORY_FAILURE:\r\n      state = { ...state, error: action.payload.error, loading: false };\r\n      break;\r\n  }\r\n  return state;\r\n};\r\n","C:\\Users\\pabinlimbu\\Documents\\personal-projects\\mnm\\mnm-frontend-admin\\src\\store\\actions\\category.action.js",["240"],"import axiosInstance from \"../../helper/axios\";\r\nimport { categoryConstant } from \"./constaints\";\r\n\r\nconst getAllCategory = () => {\r\n  return async (dispatch) => {\r\n    dispatch({ type: categoryConstant.GET_ALL_CATEGORY_REQUEST });\r\n\r\n    const res = await axiosInstance.get(\"/category/getcategory\");\r\n\r\n    if (res.status === 200) {\r\n      //console.log(res);\r\n      const { categoryList } = res.data;\r\n      dispatch({\r\n        type: categoryConstant.GET_ALL_CATEGORY_SUCCESS,\r\n        payload: { categories: categoryList },\r\n      });\r\n    } else {\r\n      dispatch({\r\n        type: categoryConstant.GET_ALL_CATEGORY_FAILURE,\r\n        payload: {\r\n          error: res.data.error,\r\n        },\r\n      });\r\n    }\r\n  };\r\n};\r\n\r\nexport const addCategory = (form) => {\r\n  return async (dispatch) => {\r\n    dispatch({ type: categoryConstant.ADD_NEW_CATEGORY_REQUEST });\r\n\r\n    try {\r\n      const res = await axiosInstance.post(\"/category/create\", form);\r\n      if (res.status === 201) {\r\n        dispatch({\r\n          type: categoryConstant.ADD_NEW_CATEGORY_SUCCESS,\r\n          payload: { category: res.data.category },\r\n        });\r\n      } else {\r\n        dispatch({\r\n          type: categoryConstant.ADD_NEW_CATEGORY_FAILURE,\r\n          payload: res.data.error,\r\n        });\r\n      }\r\n    } catch (error) {\r\n      const { status } = error.response;\r\n      console.log(error.response);\r\n      console.log(status);\r\n    }\r\n  };\r\n};\r\n\r\nexport const updateCategories = (form) => {\r\n  return async (dispatch) => {\r\n    dispatch({ type: categoryConstant.UPDATE_CATEGORY_REQUEST });\r\n    //console.log(...form);\r\n    const res = await axiosInstance.post(\"/category/updateCategory\", form);\r\n\r\n    console.log(res);\r\n    // if (res.status == 201) {\r\n    //   dispatch(getAllCategory());\r\n    //   dispatch({ type: categoryConstant.UPDATE_CATEGORY_SUCCESS }); // fetching category might take some time -- show some loader while fetching cat.\r\n    // } else {\r\n    //   const { error } = res.data;\r\n    //   dispatch({\r\n    //     type: categoryConstant.UPDATE_CATEGORY_FAILURE,\r\n    //     payload: { error },\r\n    //   });\r\n    // }\r\n  };\r\n};\r\nexport const deleteCategories = (ids) => {\r\n  return async (dispatch) => {\r\n    dispatch({ type: categoryConstant.DELETE_CATEGORY_REQUEST });\r\n    const res = await axiosInstance.post(\"/category/delete\", {\r\n      payload: { ids },\r\n    });\r\n    if (res.status == 201) {\r\n      dispatch({ type: categoryConstant.DELETE_CATEGORY_SUCCESS });\r\n      dispatch(getAllCategory());\r\n    } else {\r\n      const { error } = res.data;\r\n      dispatch({\r\n        type: categoryConstant.DELETE_CATEGORY_FAILURE,\r\n        payload: { error },\r\n      });\r\n    }\r\n  };\r\n};\r\n\r\nexport { getAllCategory };\r\n","C:\\Users\\pabinlimbu\\Documents\\personal-projects\\mnm\\mnm-frontend-admin\\src\\container\\Product\\index.js",["241"],"import React, { useState } from \"react\";\r\nimport Layout from \"../../components/layout/layout\";\r\nimport { Container, Row, Col, Modal, Table, Button } from \"react-bootstrap\";\r\nimport MyModal from \"../../components/ui/modal\";\r\nimport Input from \"../../components/ui/input/input\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  addProduct,\r\n  updateProduct,\r\n  deleteProduct,\r\n} from \"../../store/actions/product.actions\";\r\nimport { generatePublicUrl } from \"../../urlConfig\";\r\nimport EditProductModal from \"./components/EditProductModal\";\r\nimport ProductDetailsModal from \"./components/ProductDetailsModal\";\r\nimport \"./style.css\";\r\n\r\nfunction Product() {\r\n  /**state variables */\r\n  const [show, setShow] = useState(false);\r\n  const [name, setName] = useState(\"\");\r\n  const [productPictures, setProductPictures] = useState([]);\r\n  const [price, setPrice] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n  const [quantity, setQuantity] = useState(\"\");\r\n  const [categoryId, setCategoryId] = useState(\"\");\r\n  const [productDetailModalShow, setProductDetailModalShow] = useState(false);\r\n  const [productDetails, setProductDetails] = useState(null); //this product is used while updating product.\r\n  const [editProductModal, setEditProductModal] = useState(false);\r\n\r\n  //other variables\r\n  const categoryList = useSelector((state) => state.category);\r\n  const productList = useSelector((state) => state.product);\r\n  const dispatch = useDispatch();\r\n  /**state variables END */\r\n\r\n  const handleShow = () => setShow(true);\r\n  const handleClose = () => {\r\n    setShow(false);\r\n  };\r\n\r\n\r\n  const handleSave = () => {\r\n    const form = new FormData();\r\n    form.append(\"name\", name);\r\n    form.append(\"quantity\", quantity);\r\n    form.append(\"price\", price);\r\n    form.append(\"description\", description);\r\n    form.append(\"category\", categoryId);\r\n    for (let pic of productPictures) {\r\n      form.append(\"productPicture\", pic);\r\n    }\r\n    dispatch(addProduct(form));\r\n  };\r\n\r\n  /**CATEGORY LIST FUCNTION */\r\n  const createCtegorylist = (categories, options = []) => {\r\n    for (let category of categories) {\r\n      options.push({ value: category._id, name: category.name });\r\n      if (category.children.length > 0) {\r\n        createCtegorylist(category.children, options);\r\n      }\r\n    }\r\n    return options;\r\n  };\r\n  /**CATEGORY LIST FUCNTION END */\r\n\r\n  /**handle product picture */\r\n  const handleProductPictures = (e) => {\r\n    setProductPictures([...productPictures, e.target.files[0]]);\r\n  };\r\n  /**handle product picture END */\r\n\r\n  const productDetailModalHandleClick = (product) => {\r\n    console.log(product);\r\n    setProductDetails(product);\r\n    setProductDetailModalShow(true);\r\n  };\r\n\r\n  // render editProductDetails modal.\r\n  const showEditProductModal = (product) => {\r\n    setProductDetails(product);\r\n    setEditProductModal(true);\r\n  };\r\n\r\n  const handleEditProductInput = (propertyname, value) => {\r\n    console.log(\"click\");\r\n    setProductDetails({ ...productDetails, [propertyname]: value });\r\n  };\r\n  const handleEditProductSubmitForm = () => {\r\n    // console.log(\"from submited\");\r\n    //  console.log(productDetails._id);\r\n\r\n    const form = new FormData();\r\n    form.append(\"_id\", productDetails._id);\r\n    form.append(\"name\", productDetails.name);\r\n    form.append(\"quantity\", productDetails.quantity);\r\n    form.append(\"price\", productDetails.price);\r\n    form.append(\"description\", productDetails.description);\r\n    form.append(\"category\", productDetails.category._id);\r\n    form.append(\"isfeatured\", productDetails.isFeatured ? true : false);\r\n     dispatch(updateProduct(form));\r\n  };\r\n\r\n  const handleDeleteProduct = (product) => {\r\n    dispatch(deleteProduct(product));\r\n  };\r\n\r\n  const editProductModalHandleClose = () => {\r\n    setEditProductModal(false);\r\n  };\r\n\r\n  /**RENDER PRODUCT FUNCTION */\r\n  const renderProducts = () => {\r\n    return (\r\n      <Table responsive=\"sm\" style={{ fontSize: \"12px\" }}>\r\n        <thead>\r\n          <tr>\r\n            <th>S.N</th>\r\n            <th>Name</th>\r\n            <th>Price</th>\r\n            <th>Quantity</th>\r\n            <th>Category</th>\r\n            <th>CONTROLS</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {productList.products.length > 0 ? (\r\n            productList.products.map((product, index) => (\r\n              <tr\r\n                onClick={() => {\r\n                  productDetailModalHandleClick(product);\r\n                }}\r\n                key={product._id}\r\n              >\r\n                <td>{index}</td>\r\n                <td>{product.name}</td>\r\n                <td>{product.price}</td>\r\n                <td>{product.quantity}</td>\r\n                <td>{product.category.name}</td>\r\n                <td>\r\n                  <Button\r\n                    onClick={(e) => {\r\n                      e.stopPropagation();\r\n                      showEditProductModal(product);\r\n                    }}\r\n                  >\r\n                    edit\r\n                  </Button>\r\n                </td>\r\n                <td>\r\n                  {\" \"}\r\n                  <Button\r\n                    onClick={(e) => {\r\n                      e.stopPropagation();\r\n\r\n                      handleDeleteProduct(product);\r\n                    }}\r\n                  >\r\n                    Delete\r\n                  </Button>\r\n                </td>\r\n              </tr>\r\n            ))\r\n          ) : (\r\n            <tr>\r\n              <td>{\"no data\"}</td>\r\n            </tr>\r\n          )}\r\n        </tbody>\r\n      </Table>\r\n    );\r\n  };\r\n  /**RENDER PRODUCT FUNCTION END */\r\n\r\n  /**Add product modal */\r\n  const renderAddProductModal = () => {\r\n    return (\r\n      <MyModal\r\n        show={show}\r\n        handleClose={handleClose}\r\n        modalTitle=\"Add new product\"\r\n        btnName=\"Add product\"\r\n        handleSave={handleSave}\r\n      >\r\n        <Modal.Body>\r\n          <Input\r\n            label={\"prduct Name\"}\r\n            placeholder={\"Product Name\"}\r\n            value={name}\r\n            onChange={(e) => {\r\n              setName(e.target.value);\r\n            }}\r\n          ></Input>\r\n          <Input\r\n            label={\"quantity\"}\r\n            placeholder={\"quantity\"}\r\n            value={quantity}\r\n            onChange={(e) => {\r\n              setQuantity(e.target.value);\r\n            }}\r\n          ></Input>\r\n          <Input\r\n            label={\"price\"}\r\n            placeholder={\"price\"}\r\n            value={price}\r\n            onChange={(e) => {\r\n              setPrice(e.target.value);\r\n            }}\r\n          ></Input>\r\n          <Input\r\n            label={\"description\"}\r\n            placeholder={\"description\"}\r\n            value={description}\r\n            onChange={(e) => {\r\n              setDescription(e.target.value);\r\n            }}\r\n          ></Input>\r\n\r\n          <select\r\n            className=\"form-control\"\r\n            value={categoryId}\r\n            onChange={(e) => setCategoryId(e.target.value)}\r\n          >\r\n            <option>Select Category</option>\r\n            {createCtegorylist(categoryList.categories).map((option) => (\r\n              <option key={option.value} value={option.value}>\r\n                {option.name}\r\n              </option>\r\n            ))}\r\n          </select>\r\n          {productPictures.length > 0\r\n            ? productPictures.map((pic, index) => (\r\n                <div key={index}>{pic.name}</div>\r\n              ))\r\n            : null}\r\n\r\n          <input\r\n            type=\"file\"\r\n            name=\"productPicture\"\r\n            onChange={handleProductPictures}\r\n          ></input>\r\n        </Modal.Body>\r\n      </MyModal>\r\n    );\r\n  };\r\n  /**Add product modal END */\r\n\r\n  /**Render product detail modal */\r\n\r\n  const productDetailModalHandleClose = () => {\r\n    setProductDetailModalShow(false);\r\n  };\r\n\r\n  return (\r\n    <Layout sidebar>\r\n      <Container>\r\n        <Row>\r\n          <Col md={12}>\r\n            <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n              <h3>Add Product</h3>\r\n              <button onClick={handleShow}>Add</button>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col>{renderProducts()}</Col>\r\n        </Row>\r\n      </Container>\r\n\r\n      {/* categoryUpdateModal */}\r\n      <EditProductModal\r\n        show={editProductModal}\r\n        handleClose={editProductModalHandleClose}\r\n        buttons={[\r\n          {\r\n            label: \"Cancel\",\r\n            color: \"primary\",\r\n            onClick: () => {\r\n              editProductModalHandleClose();\r\n            },\r\n          },\r\n          {\r\n            label: \"Save Changes\",\r\n            color: \"danger\",\r\n            onClick: () => {\r\n              handleEditProductSubmitForm();\r\n            },\r\n          },\r\n        ]}\r\n        categories={categoryList}\r\n        productDetails={productDetails}\r\n        handleEditProductInput={handleEditProductInput}\r\n      ></EditProductModal>\r\n\r\n      <ProductDetailsModal\r\n        show={productDetailModalShow}\r\n        handleClose={productDetailModalHandleClose}\r\n        productDetails={productDetails}\r\n      ></ProductDetailsModal>\r\n\r\n      {renderAddProductModal()}\r\n      {/* {renderProductDetailsModal()} */}\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport default Product;\r\n","C:\\Users\\pabinlimbu\\Documents\\personal-projects\\mnm\\mnm-frontend-admin\\src\\store\\reducers\\product.reducers.js",["242","243"],"import { productConstaints } from \"../actions/constaints\";\r\nconst initialState = {\r\n  products: [],\r\n};\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case productConstaints.GET_ALL_PRODUCTS_SUCCESS:\r\n      state = { ...state, products: action.payload.products };\r\n      break;\r\n  }\r\n  return state;\r\n};\r\n","C:\\Users\\pabinlimbu\\Documents\\personal-projects\\mnm\\mnm-frontend-admin\\src\\store\\actions\\product.actions.js",[],"C:\\Users\\pabinlimbu\\Documents\\personal-projects\\mnm\\mnm-frontend-admin\\src\\container\\Category\\components\\updateCategoriesModal.js",["244"],"C:\\Users\\pabinlimbu\\Documents\\personal-projects\\mnm\\mnm-frontend-admin\\src\\container\\Category\\components\\UpdateCategoriesModal.js",["245","246","247","248","249","250"],"import React from \"react\";\r\nimport CategroyModal from \"../../../components/ui/modal\";\r\nimport Input from \"../../../components/ui/input/input\";\r\nimport { Col, Row, Modal } from \"react-bootstrap\";\r\n\r\nconst UpdateCategoryModal = (props) => {\r\n  const {\r\n    show,\r\n    size,\r\n    handleClose,\r\n    modalTitle,\r\n    btnName,\r\n    handleSave,\r\n    checkedArray,\r\n    expandedArray,\r\n    categoryList,\r\n    handleEditCategoryInput,\r\n  } = props;\r\n\r\n  return (\r\n    <CategroyModal\r\n      show={props.show}\r\n      handleClose={props.handleClose}\r\n      modalTitle={props.modalTitle}\r\n      btnName={props.btnName}\r\n      size={props.size}\r\n      handleSave={props.handleSave}\r\n    >\r\n      <Modal.Body>\r\n        {/* Expanded */}\r\n        <Row>\r\n          <Col>\r\n            <h6>Expanded</h6>\r\n          </Col>\r\n        </Row>\r\n        {expandedArray.length > 0 &&\r\n          expandedArray.map((item, index) => {\r\n            return (\r\n              <Row key={index}>\r\n                <Col>\r\n                  <Input\r\n                    placeholder={\"category\"}\r\n                    value={item.name}\r\n                    onChange={(e) => {\r\n                      handleEditCategoryInput(\r\n                        \"name\",\r\n                        e.target.value,\r\n                        index,\r\n                        \"expanded\"\r\n                      );\r\n                    }}\r\n                  ></Input>\r\n                </Col>\r\n                <Col>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    value={item.parentId}\r\n                    onChange={(e) => {\r\n                      handleEditCategoryInput(\r\n                        \"parentId\",\r\n                        e.target.value,\r\n                        index,\r\n                        \"expanded\"\r\n                      );\r\n                    }}\r\n                  >\r\n                    <option>Select Category</option>\r\n                    {categoryList.map((option) => (\r\n                      <option key={option.value} value={option.value}>\r\n                        {option.name}\r\n                      </option>\r\n                    ))}\r\n                  </select>\r\n                </Col>\r\n                <Col>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    onChange={(e) => {\r\n                      handleEditCategoryInput(\r\n                        \"type\",\r\n                        e.target.value,\r\n                        index,\r\n                        \"expanded\"\r\n                      );\r\n                    }}\r\n                  >\r\n                    <option value=\"\">select Type</option>\r\n                    <option value=\"Store\">Store</option>\r\n                    <option value=\"Product\">Product</option>\r\n                    <option value=\"Page\">Page </option>\r\n                  </select>\r\n                </Col>\r\n\r\n                <Col>\r\n                  <Input\r\n                    type=\"check\"\r\n                    label=\"feature Category\"\r\n                    value={\r\n                      item.isfeatured ? JSON.parse(item.isfeatured) : false\r\n                    }\r\n                    onChange={(e) => {\r\n                      handleEditCategoryInput(\r\n                        \"isfeatured\",\r\n                        e.target.checked,\r\n                        index,\r\n                        \"expanded\"\r\n                      );\r\n                      // handleEditProductInput(\"isFeatured\", e.target.checked);\r\n                    }}\r\n                  ></Input>\r\n                </Col>\r\n              </Row>\r\n            );\r\n          })}\r\n        {/* checked array */}{\" \"}\r\n        <Row>\r\n          <Col>\r\n            <h6>Checked</h6>\r\n          </Col>\r\n        </Row>\r\n        {checkedArray.length > 0 &&\r\n          checkedArray.map((item, index) => {\r\n            return (\r\n              <Row key={index}>\r\n                <Col>\r\n                  <Input\r\n                    placeholder={\"category\"}\r\n                    value={item.name}\r\n                    onChange={(e) => {\r\n                      handleEditCategoryInput(\r\n                        \"name\",\r\n                        e.target.value,\r\n                        index,\r\n                        \"checked\"\r\n                      );\r\n                    }}\r\n                  ></Input>\r\n                </Col>\r\n                <Col>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    value={item.parentId}\r\n                    onChange={(e) => {\r\n                      handleEditCategoryInput(\r\n                        \"parentId\",\r\n                        e.target.value,\r\n                        index,\r\n                        \"checked\"\r\n                      );\r\n                    }}\r\n                  >\r\n                    <option>Select Category</option>\r\n                    {categoryList.map((option) => (\r\n                      <option key={option.value} value={option.value}>\r\n                        {option.name}\r\n                      </option>\r\n                    ))}\r\n                  </select>\r\n                </Col>\r\n                <Col>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    value={item.type}\r\n                    onChange={(e) => {\r\n                      handleEditCategoryInput(\r\n                        \"type\",\r\n                        e.target.value,\r\n                        index,\r\n                        \"checked\"\r\n                      );\r\n                    }}\r\n                  >\r\n                    <option value=\"\">select Type</option>\r\n                    <option value=\"Store\">Store</option>\r\n                    <option value=\"Product\">Product</option>\r\n                    <option value=\"Page\">Page </option>\r\n                  </select>\r\n                </Col>\r\n                <Col>\r\n                  <Input\r\n                    type=\"check\"\r\n                    label={\"feature Category\"}\r\n                    value={\r\n                      item.isfeatured ? JSON.parse(item.isfeatured) : false\r\n                    }\r\n                    onChange={(e) => {\r\n                      handleEditCategoryInput(\r\n                        \"isfeatured\",\r\n                        e.target.checked,\r\n                        index,\r\n                        \"checked\"\r\n                      );\r\n                    }}\r\n                  ></Input>\r\n                </Col>\r\n              </Row>\r\n            );\r\n          })}\r\n      </Modal.Body>\r\n    </CategroyModal>\r\n  );\r\n};\r\nexport default UpdateCategoryModal;\r\n","C:\\Users\\pabinlimbu\\Documents\\personal-projects\\mnm\\mnm-frontend-admin\\src\\container\\Category\\components\\AddCategoryModal.js",[],"C:\\Users\\pabinlimbu\\Documents\\personal-projects\\mnm\\mnm-frontend-admin\\src\\container\\Category\\components\\DeleteCategoryModal.js",[],"C:\\Users\\pabinlimbu\\Documents\\personal-projects\\mnm\\mnm-frontend-admin\\src\\components\\ui\\modal\\MyModal.js",[],"C:\\Users\\pabinlimbu\\Documents\\personal-projects\\mnm\\mnm-frontend-admin\\src\\helper\\LinearCategories.js",[],["251","252"],"C:\\Users\\pabinlimbu\\Documents\\personal-projects\\mnm\\mnm-frontend-admin\\src\\store\\actions\\page.actions.js",[],"C:\\Users\\pabinlimbu\\Documents\\personal-projects\\mnm\\mnm-frontend-admin\\src\\store\\reducers\\page.reducer.js",["253","254"],"import { pageConstant } from \"../actions\";\r\nconst initialState = {\r\n  error: null,\r\n  loading: false,\r\n  page: {},\r\n};\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case pageConstant.CREATE_PAGE_REQUEST:\r\n      state = {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n      break;\r\n    case pageConstant.CREATE_PAGE_SUCCESS:\r\n      state = { ...state, loading: false };\r\n      break;\r\n    case pageConstant.CREATE_PAGE_FAILURE:\r\n      state = {\r\n        ...state,\r\n        loading: false,\r\n        error: action.payload.error,\r\n      };\r\n  }\r\n\r\n  return state;\r\n};\r\n","C:\\Users\\pabinlimbu\\Documents\\personal-projects\\mnm\\mnm-frontend-admin\\src\\container\\Product\\components\\EditProductModal.js",[],"C:\\Users\\pabinlimbu\\Documents\\personal-projects\\mnm\\mnm-frontend-admin\\src\\container\\Product\\components\\ProductDetailsModal.js",[],"C:\\Users\\pabinlimbu\\Documents\\personal-projects\\mnm\\mnm-frontend-admin\\src\\container\\Banner\\index.js",["255","256","257","258"],"import React, { useEffect } from \"react\";\r\nimport { useState } from \"react\";\r\nimport Layout from \"../../components/layout/layout\";\r\nimport MyModal from \"../../components/ui/modal/MyModal\";\r\nimport Input from \"../../components/ui/input/input\";\r\nimport { Button, Col, Container, Form, FormGroup, Row, Table } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  addBanner,\r\n  getBanner,\r\n  deleteBanner,\r\n} from \"../../store/actions/banner.actions\";\r\n\r\nimport BannerDetailsModal from \"./components/BannerDetailsModal\";\r\n\r\nfunction Banner() {\r\n  const [showmodal, setShowmodal] = useState(false);\r\n  const [name, setName] = useState(\"\");\r\n  const [linkType, setlinkType] = useState(\"\");\r\n  const [bannerImage, setBannerImage] = useState([]);\r\n  const [slug, setSlug] = useState(\"\");\r\n  const [slugId, setSlugID] = useState(\"\");\r\n  const [category, setCategory] = useState(\"\");\r\n  const [bannerDetails, setbannerDetails] = useState(null);\r\n  const [bannerDetailsModalShow, setBannerDetailsModalShow] = useState(false);\r\n  const dispatch = useDispatch();\r\n  //redux store.\r\n  const categoryList = useSelector((state) => state.category);\r\n  const productList = useSelector((state) => state.product);\r\n  const bannerList = useSelector((state) => state.banner);\r\n\r\n  useEffect(() => {\r\n    dispatch(getBanner());\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setSlug(\"\");\r\n  }, [linkType]);\r\n\r\n  /**Banner model function  */\r\n  const handleModalClose = () => {\r\n    setShowmodal(false);\r\n    setName(\"\");\r\n    setlinkType(\"\");\r\n    setBannerImage(\"\");\r\n    setSlug(\"\");\r\n  };\r\n\r\n  const handleBannerSave = () => {\r\n    const form = new FormData();\r\n    if (linkType == \"product\") {\r\n      form.append(\"name\", name);\r\n      form.append(\"bannerImage\", bannerImage);\r\n      form.append(\"linkType\", linkType);\r\n      form.append(\"slug\", slug);\r\n      form.append(\"slugId\", slugId);\r\n      form.append(\"category\", category);\r\n    }\r\n    if (linkType !== \"product\") {\r\n      form.append(\"name\", name);\r\n      form.append(\"bannerImage\", bannerImage);\r\n      form.append(\"linkType\", linkType);\r\n      form.append(\"slug\", slug);\r\n      form.append(\"category\", category);\r\n    }\r\n    dispatch(addBanner(form));\r\n  };\r\n\r\n  const handleBannerPicture = (e) => {\r\n    setBannerImage(e.target.files[0]);\r\n  };\r\n\r\n  const handleLinkSelect = (e) => {\r\n    setSlug(e.target.value);\r\n    if (linkType == \"product\") {\r\n      const productId =\r\n        e.target.options[e.target.options.selectedIndex].getAttribute(\r\n          \"product\"\r\n        );\r\n      setSlugID(productId);\r\n    }\r\n    const catid =\r\n      e.target.options[e.target.options.selectedIndex].getAttribute(\"category\");\r\n    setCategory(catid);\r\n  };\r\n\r\n  const bannerDetailModalHandleClose = () => {\r\n    setBannerDetailsModalShow(false);\r\n  };\r\n\r\n  const handleBannerOkButton = () => {\r\n    setBannerDetailsModalShow(false);\r\n  };\r\n  /**Banner model function  END*/\r\n\r\n  /**CATEGORY and PRODUCT Linear LIST FUCNTION */\r\n  const createCtegorylist = (categories, options = []) => {\r\n    for (let category of categories) {\r\n      options.push({\r\n        value: category._id,\r\n        name: category.name,\r\n        slug: category.slug,\r\n      });\r\n      if (category.children.length > 0) {\r\n        createCtegorylist(category.children, options);\r\n      }\r\n    }\r\n    return options;\r\n  };\r\n\r\n  const createProductList = (products, options = []) => {\r\n    for (let product of products) {\r\n      options.push({\r\n        value: product._id,\r\n        name: product.name,\r\n        slug: product.slug,\r\n        category: product.category._id,\r\n      });\r\n    }\r\n    return options;\r\n  };\r\n  /**CATEGORY and PRODUCT Linear LIST FUCNTION END */\r\n\r\n  /*  RENDER BANNER LIST  */\r\n  const renderBanner = (bannerList) => {\r\n    return (\r\n      <div>\r\n        <Table\r\n          responsive=\"sm\"\r\n          style={{ fontSize: \"12px\" }}\r\n          striped\r\n          bordered\r\n          hover\r\n        >\r\n          <thead>\r\n            <tr>\r\n              <th>SN</th>\r\n              <th>Name</th>\r\n              <th>Type</th>\r\n              <th>Link</th>\r\n              <th>Controls</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {bannerList.banner.length > 0\r\n              ? bannerList.banner.map((banner, index) => {\r\n                  return (\r\n                    <tr\r\n                      onClick={() => {\r\n                        setBannerDetailsModalShow(true);\r\n                        setbannerDetails(banner);\r\n                      }}\r\n                      key={banner._id}\r\n                    >\r\n                      <td>{index}</td>\r\n                      <td>{banner.name}</td>\r\n                      <td>{banner.linkType}</td>\r\n                      <td>{banner.slug}</td>\r\n\r\n                      <td>\r\n                        <Button\r\n                          onClick={(event) => {\r\n                            event.stopPropagation();\r\n                            handleBannerDelete(banner);\r\n                          }}\r\n                        >\r\n                          Delete\r\n                        </Button>\r\n                      </td>\r\n                    </tr>\r\n                  );\r\n                })\r\n              : null}\r\n          </tbody>\r\n        </Table>\r\n      </div>\r\n    );\r\n  };\r\n  const handleBannerDelete = (bannerdata) => {\r\n    dispatch(deleteBanner(bannerdata));\r\n  };\r\n  /*  RENDER BANNER LIST END  */\r\n\r\n  const renderAddBannerModal = () => {\r\n    return (\r\n      <MyModal\r\n        show={showmodal}\r\n        handleClose={handleModalClose}\r\n        modalTitle={\"Banner\"}\r\n        size=\"lg\"\r\n        buttons={[\r\n          {\r\n            label: \"Cancel\",\r\n            color: \"primary\",\r\n            onClick: (e) => {\r\n              handleModalClose();\r\n            },\r\n          },\r\n          {\r\n            label: \"Save Changes\",\r\n            color: \"danger\",\r\n            onClick: () => {\r\n              handleBannerSave();\r\n            },\r\n          },\r\n        ]}\r\n      >\r\n        <Form>\r\n          <Input\r\n            label={\"Banner Name\"}\r\n            placeholder={\"Banner Name\"}\r\n            value={name}\r\n            onChange={(e) => {\r\n              setName(e.target.value);\r\n            }}\r\n          ></Input>\r\n          <FormGroup>\r\n            <input\r\n              type=\"file\"\r\n              name=\"bannerPicture\"\r\n              onChange={(e) => {\r\n                handleBannerPicture(e);\r\n              }}\r\n            ></input>\r\n          </FormGroup>\r\n          <FormGroup>\r\n            <Form.Label>Select Link Type</Form.Label>\r\n            <Form.Check\r\n              type={\"radio\"}\r\n              id={`rdo-product`}\r\n              label={`Product`}\r\n              name=\"bannerLinkType\"\r\n              onClick={() => setlinkType(\"product\")}\r\n            />\r\n            <Form.Check\r\n              type={\"radio\"}\r\n              id={`rdo-category`}\r\n              label={`category`}\r\n              name=\"bannerLinkType\"\r\n              onClick={() => setlinkType(\"category\")}\r\n            />\r\n          </FormGroup>\r\n          <fieldset disabled={linkType == \"\" ? true : false}>\r\n            <FormGroup>\r\n              <Form.Select\r\n                size=\"lg\"\r\n                onChange={(e) => {\r\n                  handleLinkSelect(e);\r\n                }}\r\n                value={slug}\r\n              >\r\n                <option>Select Banner Link</option>\r\n                {linkType === \"category\"\r\n                  ? createCtegorylist(categoryList.categories).map((item) => {\r\n                      return (\r\n                        <option\r\n                          key={item.value}\r\n                          // value={item.slug}\r\n                          category={item.value}\r\n                        >\r\n                          {item.name}\r\n                        </option>\r\n                      );\r\n                    })\r\n                  : linkType === \"product\"\r\n                  ? createProductList(productList.products).map((item) => {\r\n                      return (\r\n                        <option\r\n                          key={item.value}\r\n                          //value={item.slug}\r\n                          category={item.category}\r\n                          product={item.value}\r\n                        >\r\n                          {item.name}\r\n                        </option>\r\n                      );\r\n                    })\r\n                  : null}\r\n              </Form.Select>\r\n            </FormGroup>\r\n          </fieldset>\r\n        </Form>\r\n      </MyModal>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Layout sidebar>\r\n      <Container>\r\n        <Row>\r\n          <Col className=\"d-flex\">\r\n            <h3>Add banner</h3>\r\n            <button\r\n              onClick={() => {\r\n                setShowmodal(true);\r\n              }}\r\n            >\r\n              add banner\r\n            </button>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col>{renderBanner(bannerList)}</Col>\r\n        </Row>\r\n      </Container>\r\n      {renderAddBannerModal()}\r\n      <BannerDetailsModal\r\n        show={bannerDetailsModalShow}\r\n        handleClose={bannerDetailModalHandleClose}\r\n        bannerDetails={bannerDetails}\r\n        handleSave={handleBannerOkButton}\r\n      ></BannerDetailsModal>\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport default Banner;\r\n","C:\\Users\\pabinlimbu\\Documents\\personal-projects\\mnm\\mnm-frontend-admin\\src\\store\\actions\\banner.actions.js",[],"C:\\Users\\pabinlimbu\\Documents\\personal-projects\\mnm\\mnm-frontend-admin\\src\\store\\reducers\\banner.reducers.js",["259","260"],"import { bannerConstants } from \"../actions/constaints\";\r\nconst initState = {\r\n  banner: [],\r\n  loading: false,\r\n};\r\n\r\nexport default (state = initState, action) => {\r\n  switch (action.type) {\r\n    case bannerConstants.GET_BANNER_SUCCESS:\r\n      state = { ...state, banner: action.payload.banner.data };\r\n      break;\r\n  }\r\n  return state;\r\n};\r\n","C:\\Users\\pabinlimbu\\Documents\\personal-projects\\mnm\\mnm-frontend-admin\\src\\container\\Banner\\components\\BannerDetailsModal.js",[],"C:\\Users\\pabinlimbu\\Documents\\personal-projects\\mnm\\mnm-frontend-admin\\src\\container\\UserComments\\index.js",["261"],"import React, { useEffect, useState } from \"react\";\r\nimport { Button, Col, Container, Row, Table } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getComment, addComment, deleteComment } from \"../../store/actions\";\r\nimport Layout from \"../../components/layout/layout\";\r\nimport Input from \"../../components/ui/input/input\";\r\nimport MyModal from \"../../components/ui/modal/MyModal\";\r\nfunction UserComments() {\r\n  const [commenter, setCommenter] = useState(\"\");\r\n  const [comment, setComment] = useState(\"\");\r\n  const [showAddCommentModal, setShowAddCommentModal] = useState(false);\r\n  const dispatch = useDispatch();\r\n\r\n  //store redux\r\n  const commentList = useSelector((state) => state.userComment);\r\n\r\n  //hooks\r\n  useEffect(() => {\r\n    dispatch(getComment());\r\n  }, []);\r\n\r\n  const handleModalClose = () => {\r\n    setShowAddCommentModal(false);\r\n    setComment(\"\");\r\n    setCommenter(\"\");\r\n  };\r\n  const handleCommentSave = () => {\r\n    const data = { commenter, comment };\r\n    dispatch(addComment(data));\r\n    console.log(\"save comments\");\r\n  };\r\n\r\n  const handleDeleteUserComment = (id) => {\r\n    dispatch(deleteComment(id));\r\n  };\r\n\r\n  const rennderAddCommentModal = () => {\r\n    return (\r\n      <MyModal\r\n        show={showAddCommentModal}\r\n        handleClose={handleModalClose}\r\n        modalTitle={\"Add comments\"}\r\n        size=\"lg\"\r\n        buttons={[\r\n          {\r\n            label: \"Cancel\",\r\n            color: \"primary\",\r\n            onClick: (e) => {\r\n              handleModalClose();\r\n            },\r\n          },\r\n          {\r\n            label: \"Save Changes\",\r\n            color: \"danger\",\r\n            onClick: () => {\r\n              handleCommentSave();\r\n            },\r\n          },\r\n        ]}\r\n      >\r\n        <Input\r\n          label={\"commenter\"}\r\n          placeholder={\"commenter name\"}\r\n          value={commenter}\r\n          onChange={(e) => {\r\n            setCommenter(e.target.value);\r\n          }}\r\n        ></Input>\r\n        <Input\r\n          type={\"textArea\"}\r\n          label={\"commentttt\"}\r\n          placeholder={\"commentttt\"}\r\n          value={comment}\r\n          onChange={(e) => {\r\n            setComment(e.target.value);\r\n          }}\r\n        ></Input>\r\n      </MyModal>\r\n    );\r\n  };\r\n\r\n  const renderComments = (commentList) => {\r\n    return (\r\n      <div>\r\n        <Table\r\n          responsive=\"sm\"\r\n          style={{ fontSize: \"12px\" }}\r\n          striped\r\n          bordered\r\n          hover\r\n        >\r\n          <thead>\r\n            <tr>\r\n              <th>SN</th>\r\n              <th>commenter</th>\r\n              <th>Comment</th>\r\n              <th>Controls</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {commentList.comments.length > 0\r\n              ? commentList.comments.map((comment, index) => {\r\n                  return (\r\n                    <tr\r\n                      onClick={() => {\r\n                        // setBannerDetailsModalShow(true);\r\n                        // setbannerDetails(banner);\r\n                      }}\r\n                      key={comment._id}\r\n                    >\r\n                      <td>{index}</td>\r\n                      <td>{comment.commenter}</td>\r\n                      <td>{comment.comment}</td>\r\n\r\n                      <td>\r\n                        <Button\r\n                          onClick={(event) => {\r\n                            handleDeleteUserComment(comment._id);\r\n                          }}\r\n                        >\r\n                          Delete\r\n                        </Button>\r\n                      </td>\r\n                    </tr>\r\n                  );\r\n                })\r\n              : null}\r\n          </tbody>\r\n        </Table>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  //logs\r\n  // console.log(commentList.comments);\r\n  return (\r\n    <Layout sidebar>\r\n      <Container>\r\n        <Row>\r\n          <Col className=\"d-flex\" xs={12}>\r\n            {\" \"}\r\n            <h3>Add Comments</h3>\r\n            <button\r\n              onClick={() => {\r\n                setShowAddCommentModal(true);\r\n              }}\r\n            >\r\n              add Comments\r\n            </button>\r\n          </Col>\r\n          <Col>{renderComments(commentList)}</Col>\r\n        </Row>\r\n\r\n        {rennderAddCommentModal()}\r\n      </Container>\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport default UserComments;\r\n","C:\\Users\\pabinlimbu\\Documents\\personal-projects\\mnm\\mnm-frontend-admin\\src\\store\\actions\\usercomment.action.js",["262"],"import { userCommentConstants } from \"./constaints\";\r\nimport axiosInstance from \"../../helper/axios\";\r\n\r\nexport const addComment = (data) => {\r\n  return async (dispatch) => {\r\n    console.log(\"add comment action reached\");\r\n    console.log(data);\r\n    try {\r\n      const res = await axiosInstance.post(\"/comment/create\", data);\r\n      if (res.status === 200) {\r\n        dispatch({\r\n          type: userCommentConstants.CREATE_NEW_COMMENT_SUCCESS,\r\n          payload: { data: res.data },\r\n        });\r\n      }\r\n      if (res.status === 400) {\r\n        console.log(\"fail to insert data\");\r\n        dispatch({ type: userCommentConstants.CREATE_NEW_COMMENT_FAILURE });\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n};\r\nexport const getComment = () => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const res = await axiosInstance.get(\"/comment/getcomment\");\r\n      if (res.status === 200) {\r\n        dispatch({\r\n          type: userCommentConstants.GET_COMMENT_SUCCESS,\r\n          payload: { data: res.data },\r\n        });\r\n      }\r\n      if (res.status === 400) {\r\n        console.log(\"fail to fetch data\");\r\n        dispatch({ type: userCommentConstants.GET_COMMENT_FAILURE });\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n};\r\nexport const deleteComment = (id) => {\r\n  return async () => {\r\n    console.log(id);\r\n    const res = axiosInstance.post(\"comment/delete\", { id });\r\n  };\r\n};\r\n","C:\\Users\\pabinlimbu\\Documents\\personal-projects\\mnm\\mnm-frontend-admin\\src\\store\\reducers\\usercomment.reducers.js",["263","264"],"import { userCommentConstants } from \"../actions/constaints\";\r\nconst initState = {\r\n  comments: [],\r\n  loading: false,\r\n};\r\n\r\nexport default (state = initState, action) => {\r\n  switch (action.type) {\r\n    case userCommentConstants.GET_COMMENT_SUCCESS:\r\n      state = { ...state, comments: action.payload.data.data };\r\n      break;\r\n  }\r\n  return state;\r\n};\r\n","C:\\Users\\pabinlimbu\\Documents\\personal-projects\\mnm\\mnm-frontend-admin\\src\\container\\Order\\index.js",["265","266","267","268","269","270"],"import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Button,\r\n  Card,\r\n  Col,\r\n  Form,\r\n  FormControl,\r\n  InputGroup,\r\n  Row,\r\n  Table,\r\n} from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Layout from \"../../components/layout/layout\";\r\nimport MyModal from \"../../components/ui/modal/MyModal\";\r\nimport { getOrder, packOrder } from \"../../store/actions/order.actions\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport \"./style.css\";\r\n\r\nfunction Order() {\r\n  const [showOrder, setShowOrder] = useState(false);\r\n  const [currentOrder, setCurrentOrder] = useState({});\r\n  const [orders, setOrders] = useState([]);\r\n  const [errorMessage, setErrorMessage] = useState(\"\");\r\n  const [searchId, setSearchId] = useState(\"\");\r\n  const [startDate, setStartDate] = useState(new Date());\r\n  const dispatch = useDispatch();\r\n  const order = useSelector((state) => state.orders);\r\n  useEffect(() => {\r\n    dispatch(getOrder(startDate));\r\n  }, [startDate]);\r\n\r\n  useEffect(() => {\r\n    setOrders(order.orders);\r\n  }, [order]);\r\n\r\n  const handleClose = () => {\r\n    setShowOrder(false);\r\n    setErrorMessage(\"\");\r\n  };\r\n  const handleSearch = (orders, searchId) => {\r\n    if (searchId === \"\") {\r\n      return orders;\r\n    }\r\n    const result = orders.filter((order) => {\r\n      if (order.orderId === parseInt(searchId)) return order;\r\n    });\r\n\r\n    return result;\r\n  };\r\n\r\n  const filterOrders = (orders, filterby) => {\r\n    const filteredOrder = orders.filter((order) => {\r\n      switch (filterby) {\r\n        case \"order\":\r\n          if (\r\n            order.orderStatus[0].isCompleted == true &&\r\n            order.orderStatus[1].isCompleted === false &&\r\n            order.orderStatus[2].isCompleted === false\r\n          ) {\r\n            return order;\r\n          }\r\n          break;\r\n        case \"packed\":\r\n          if (\r\n            order.orderStatus[0].isCompleted == true &&\r\n            order.orderStatus[1].isCompleted === true &&\r\n            order.orderStatus[2].isCompleted === false\r\n          ) {\r\n            return order;\r\n          }\r\n          break;\r\n\r\n        case \"delivered\":\r\n          if (\r\n            order.orderStatus[0].isCompleted == true &&\r\n            order.orderStatus[1].isCompleted === true &&\r\n            order.orderStatus[2].isCompleted === true\r\n          ) {\r\n            return order;\r\n          }\r\n          break;\r\n        default:\r\n          return order;\r\n      }\r\n    });\r\n    return filteredOrder;\r\n  };\r\n\r\n  const handlePackItem = (orderId) => {\r\n    // If all item are checked then submit for packaging.\r\n    let checkBoxes = document.querySelectorAll(\r\n      'input[name=\"itemToPack\"]:checked'\r\n    );\r\n    if (checkBoxes.length === currentOrder.items.length) {\r\n      dispatch(packOrder(orderId));\r\n      setShowOrder(false);\r\n    } else {\r\n      setErrorMessage(\"* Not all item are checked ! please check all item \");\r\n    }\r\n  };\r\n\r\n  const renderOrders = (order) => {\r\n    return (\r\n      <Card\r\n        onClick={() => {\r\n          setCurrentOrder(order);\r\n          setShowOrder(true);\r\n        }}\r\n      >\r\n        <Card.Body>\r\n          <Card.Text>\r\n            {`ID: ${order.orderId} user: ${order.user} Phone: ${\r\n              order.address.mobileNumber\r\n            } date : ${new Date(order.createdAt).toLocaleString(\"en-US\", {\r\n              weekday: \"long\",\r\n              year: \"numeric\",\r\n              month: \"long\",\r\n              day: \"numeric\",\r\n            })}`}{\" \"}\r\n          </Card.Text>\r\n          <Card.Text>\r\n            <div className=\"progressBar-container w-100\">\r\n              <ul className=\"progressBar\">\r\n                <li className=\"active\">Ordered</li>\r\n                <li>Packed</li>\r\n                <li>Delivered</li>\r\n              </ul>\r\n            </div>\r\n          </Card.Text>\r\n        </Card.Body>\r\n      </Card>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Layout sidebar>\r\n      <div className=\"order-container \">\r\n        <div className=\"filter-container  w-100\">\r\n          <div className=\"filteroption-container \">\r\n            <Form.Select\r\n              className=\"form-control w-md-25  ml-2\"\r\n              aria-label=\"Default select example\"\r\n              size=\"lg\"\r\n              onChange={(e) => {\r\n                if (e.target.value === \"1\") {\r\n                  setOrders(filterOrders(order.orders, \"\"));\r\n                }\r\n                if (e.target.value === \"2\") {\r\n                  setOrders(filterOrders(order.orders, \"order\"));\r\n                }\r\n                if (e.target.value === \"3\") {\r\n                  setOrders(filterOrders(order.orders, \"packed\"));\r\n                }\r\n                if (e.target.value === \"4\") {\r\n                  setOrders(filterOrders(order.orders, \"delivered\"));\r\n                }\r\n              }}\r\n            >\r\n              <option value=\"1\">All</option>\r\n              <option value=\"2\">Order</option>\r\n              <option value=\"3\">Packed</option>\r\n              <option value=\"4\">Delivered</option>\r\n            </Form.Select>\r\n          </div>\r\n          <div className=\"search-order-container mt-2\">\r\n            <Row>\r\n              <Col xs={12}>\r\n                <InputGroup className=\"mb-3\">\r\n                  <FormControl\r\n                    placeholder=\"search...\"\r\n                    type=\"text\"\r\n                    value={searchId}\r\n                    onChange={(e) => {\r\n                      setSearchId(e.target.value);\r\n                    }}\r\n                  />\r\n                  <Button\r\n                    variant=\"outline-secondary\"\r\n                    id=\"\"\r\n                    onClick={() => {\r\n                      const result = handleSearch(order.orders, searchId);\r\n                      setOrders(result);\r\n                    }}\r\n                  >\r\n                    O\r\n                  </Button>\r\n                </InputGroup>\r\n              </Col>\r\n              <Col xs={12} className=\"mb-2\">\r\n                <label>sort order by date :</label>\r\n                <DatePicker\r\n                  selected={startDate}\r\n                  onChange={(date) => {\r\n                    setStartDate(date);\r\n                  }}\r\n                />\r\n              </Col>\r\n            </Row>\r\n          </div>\r\n        </div>\r\n        <ul>\r\n          {orders &&\r\n            orders.map((order, index) => {\r\n              return <li key={index}>{renderOrders(order)}</li>;\r\n            })}\r\n        </ul>\r\n\r\n        <MyModal\r\n          show={showOrder}\r\n          handleClose={handleClose}\r\n          size={\"lg\"}\r\n          backdrop=\"static\"\r\n          errormsg={errorMessage}\r\n          modaltitle={`Id : ${currentOrder.orderId}  | ${new Date(\r\n            currentOrder.createdAt\r\n          ).toLocaleString(\"en-US\", {\r\n            weekday: \"long\",\r\n            year: \"numeric\",\r\n            month: \"long\",\r\n            day: \"numeric\",\r\n          })}`}\r\n          buttons={[\r\n            {\r\n              label: \"Cancel\",\r\n              color: \"primary\",\r\n              onClick: () => {\r\n                handleClose();\r\n              },\r\n            },\r\n            {\r\n              label: \"Pack items\",\r\n              color: \"success\",\r\n              onClick: () => {\r\n                handlePackItem(currentOrder._id);\r\n              },\r\n            },\r\n          ]}\r\n        >\r\n          <Row>\r\n            <Col xs={6}>\r\n              <Form.Text>\r\n                city: {currentOrder.address && currentOrder.address.address}\r\n              </Form.Text>\r\n            </Col>\r\n            <Col xs={6}>\r\n              <Form.Text>\r\n                Locality:{\" \"}\r\n                {currentOrder.address && currentOrder.address.locality}{\" \"}\r\n              </Form.Text>\r\n            </Col>\r\n            <Col xs={6}>\r\n              <Form.Text>\r\n                District:{\" \"}\r\n                {currentOrder.address && currentOrder.address.cityDistrictTown}{\" \"}\r\n              </Form.Text>\r\n            </Col>\r\n            <Col xs={6}>\r\n              <Form.Text>\r\n                Landmark:{\" \"}\r\n                {currentOrder.address && currentOrder.address.landmark}{\" \"}\r\n              </Form.Text>\r\n            </Col>\r\n            <Col xs={6}>\r\n              <Form.Text>\r\n                Number:{\" \"}\r\n                {currentOrder.address && currentOrder.address.mobileNumber}{\" \"}\r\n              </Form.Text>\r\n            </Col>\r\n          </Row>\r\n\r\n          <div className=\"fixed-table-container\">\r\n            <Table striped bordered hover size=\"sm\">\r\n              <thead>\r\n                <tr>\r\n                  <th>#</th>\r\n                  <th>Item</th>\r\n                  <th>qty</th>\r\n                  <th>packed</th>\r\n                </tr>\r\n              </thead>\r\n\r\n              <tbody>\r\n                {currentOrder.items &&\r\n                  currentOrder.items.map((item, index) => {\r\n                    return (\r\n                      <tr key={item._id}>\r\n                        <td>{index}</td>\r\n                        <td>{item.name}</td>\r\n\r\n                        <td>{item.purchasedQty}</td>\r\n                        <td style={{ textAlign: \"center\" }}>\r\n                          <input\r\n                            type=\"checkbox\"\r\n                            name=\"itemToPack\"\r\n                            id=\"\"\r\n                            onChange={(e) => {}}\r\n                          />\r\n                        </td>\r\n                      </tr>\r\n                    );\r\n                  })}\r\n              </tbody>\r\n            </Table>\r\n          </div>\r\n        </MyModal>\r\n      </div>\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport default Order;\r\n","C:\\Users\\pabinlimbu\\Documents\\personal-projects\\mnm\\mnm-frontend-admin\\src\\store\\actions\\order.actions.js",[],"C:\\Users\\pabinlimbu\\Documents\\personal-projects\\mnm\\mnm-frontend-admin\\src\\store\\reducers\\order.reducers.js",["271","272","273"],"import { orderConstants } from \"../actions\";\r\n\r\nconst initState = { orders: [], loading: false, error: false };\r\n\r\nconst getUpdatedOrder = (orders, orderToUpdate) => {\r\n  const updatedOrder = orders.map((order) => {\r\n    if (order._id == orderToUpdate.data._id) {\r\n      return { ...order, orderStatus: orderToUpdate.data.orderStatus };\r\n    } else {\r\n      return { ...order };\r\n    }\r\n  });\r\n  return updatedOrder;\r\n};\r\n\r\nexport default (state = initState, action) => {\r\n  switch (action.type) {\r\n    case orderConstants.GET_ORDER_REQUEST:\r\n      state = { ...state, loading: true, error: false };\r\n      break;\r\n\r\n    case orderConstants.GET_ORDER_SUCCESS:\r\n      state = {\r\n        ...state,\r\n        orders: action.payload.orders,\r\n        loading: false,\r\n        error: false,\r\n      };\r\n      break;\r\n\r\n    case orderConstants.GET_ORDER_FAILURE:\r\n      state = { ...state, loading: false };\r\n      break;\r\n    case orderConstants.PACK_ORDER_REQUEST:\r\n      state = { ...state, loading: false };\r\n      break;\r\n    case orderConstants.PACK_ORDER_SUCCESS:\r\n      const updatedOrders = getUpdatedOrder(state.orders, action.payload);\r\n      state = { ...state, orders: updatedOrders, loading: false };\r\n      break;\r\n    case orderConstants.PACK_ORDER_FAILURE:\r\n      state = { ...state, loading: false };\r\n      break;\r\n  }\r\n\r\n  return state;\r\n};\r\n",{"ruleId":"274","replacedBy":"275"},{"ruleId":"276","replacedBy":"277"},{"ruleId":"278","severity":1,"message":"279","line":34,"column":6,"nodeType":"280","endLine":34,"endColumn":25,"suggestions":"281"},{"ruleId":"282","severity":1,"message":"283","line":3,"column":10,"nodeType":"284","messageId":"285","endLine":3,"endColumn":19},{"ruleId":"282","severity":1,"message":"286","line":14,"column":10,"nodeType":"284","messageId":"285","endLine":14,"endColumn":15},{"ruleId":"282","severity":1,"message":"287","line":14,"column":17,"nodeType":"284","messageId":"285","endLine":14,"endColumn":25},{"ruleId":"288","severity":1,"message":"289","line":4,"column":1,"nodeType":"290","endLine":28,"endColumn":3},{"ruleId":"291","severity":1,"message":"292","line":5,"column":3,"nodeType":"293","messageId":"294","endLine":26,"endColumn":4},{"ruleId":"288","severity":1,"message":"289","line":10,"column":1,"nodeType":"290","endLine":46,"endColumn":3},{"ruleId":"291","severity":1,"message":"292","line":12,"column":3,"nodeType":"293","messageId":"294","endLine":44,"endColumn":4},{"ruleId":"282","severity":1,"message":"295","line":1,"column":10,"nodeType":"284","messageId":"285","endLine":1,"endColumn":23},{"ruleId":"282","severity":1,"message":"296","line":4,"column":31,"nodeType":"284","messageId":"285","endLine":4,"endColumn":36},{"ruleId":"282","severity":1,"message":"297","line":4,"column":38,"nodeType":"284","messageId":"285","endLine":4,"endColumn":44},{"ruleId":"282","severity":1,"message":"298","line":8,"column":3,"nodeType":"284","messageId":"285","endLine":8,"endColumn":17},{"ruleId":"299","severity":1,"message":"300","line":118,"column":44,"nodeType":"301","messageId":"302","endLine":118,"endColumn":46},{"ruleId":"299","severity":1,"message":"300","line":125,"column":44,"nodeType":"301","messageId":"302","endLine":125,"endColumn":46},{"ruleId":"299","severity":1,"message":"300","line":177,"column":14,"nodeType":"301","messageId":"302","endLine":177,"endColumn":16},{"ruleId":"299","severity":1,"message":"300","line":179,"column":19,"nodeType":"301","messageId":"302","endLine":179,"endColumn":21},{"ruleId":"299","severity":1,"message":"300","line":186,"column":21,"nodeType":"301","messageId":"302","endLine":186,"endColumn":23},{"ruleId":"299","severity":1,"message":"300","line":188,"column":15,"nodeType":"301","messageId":"302","endLine":188,"endColumn":17},{"ruleId":"299","severity":1,"message":"300","line":6,"column":16,"nodeType":"301","messageId":"302","endLine":6,"endColumn":18},{"ruleId":"299","severity":1,"message":"300","line":23,"column":17,"nodeType":"301","messageId":"302","endLine":23,"endColumn":19},{"ruleId":"288","severity":1,"message":"289","line":53,"column":1,"nodeType":"290","endLine":108,"endColumn":3},{"ruleId":"291","severity":1,"message":"292","line":54,"column":3,"nodeType":"293","messageId":"294","endLine":106,"endColumn":4},{"ruleId":"299","severity":1,"message":"300","line":78,"column":20,"nodeType":"301","messageId":"302","endLine":78,"endColumn":22},{"ruleId":"282","severity":1,"message":"303","line":12,"column":10,"nodeType":"284","messageId":"285","endLine":12,"endColumn":27},{"ruleId":"288","severity":1,"message":"289","line":5,"column":1,"nodeType":"290","endLine":12,"endColumn":3},{"ruleId":"291","severity":1,"message":"292","line":6,"column":3,"nodeType":"293","messageId":"294","endLine":10,"endColumn":4},{"ruleId":"282","severity":1,"message":"304","line":4,"column":15,"nodeType":"284","messageId":"285","endLine":4,"endColumn":24},{"ruleId":"282","severity":1,"message":"305","line":8,"column":5,"nodeType":"284","messageId":"285","endLine":8,"endColumn":9},{"ruleId":"282","severity":1,"message":"306","line":9,"column":5,"nodeType":"284","messageId":"285","endLine":9,"endColumn":9},{"ruleId":"282","severity":1,"message":"307","line":10,"column":5,"nodeType":"284","messageId":"285","endLine":10,"endColumn":16},{"ruleId":"282","severity":1,"message":"308","line":11,"column":5,"nodeType":"284","messageId":"285","endLine":11,"endColumn":15},{"ruleId":"282","severity":1,"message":"309","line":12,"column":5,"nodeType":"284","messageId":"285","endLine":12,"endColumn":12},{"ruleId":"282","severity":1,"message":"310","line":13,"column":5,"nodeType":"284","messageId":"285","endLine":13,"endColumn":15},{"ruleId":"274","replacedBy":"311"},{"ruleId":"276","replacedBy":"312"},{"ruleId":"288","severity":1,"message":"289","line":7,"column":1,"nodeType":"290","endLine":27,"endColumn":3},{"ruleId":"291","severity":1,"message":"292","line":8,"column":3,"nodeType":"293","messageId":"294","endLine":24,"endColumn":4},{"ruleId":"278","severity":1,"message":"279","line":34,"column":6,"nodeType":"280","endLine":34,"endColumn":8,"suggestions":"313"},{"ruleId":"299","severity":1,"message":"300","line":51,"column":18,"nodeType":"301","messageId":"302","endLine":51,"endColumn":20},{"ruleId":"299","severity":1,"message":"300","line":75,"column":18,"nodeType":"301","messageId":"302","endLine":75,"endColumn":20},{"ruleId":"299","severity":1,"message":"300","line":243,"column":40,"nodeType":"301","messageId":"302","endLine":243,"endColumn":42},{"ruleId":"288","severity":1,"message":"289","line":7,"column":1,"nodeType":"290","endLine":14,"endColumn":3},{"ruleId":"291","severity":1,"message":"292","line":8,"column":3,"nodeType":"293","messageId":"294","endLine":12,"endColumn":4},{"ruleId":"278","severity":1,"message":"279","line":20,"column":6,"nodeType":"280","endLine":20,"endColumn":8,"suggestions":"314"},{"ruleId":"282","severity":1,"message":"315","line":47,"column":11,"nodeType":"284","messageId":"285","endLine":47,"endColumn":14},{"ruleId":"288","severity":1,"message":"289","line":7,"column":1,"nodeType":"290","endLine":14,"endColumn":3},{"ruleId":"291","severity":1,"message":"292","line":8,"column":3,"nodeType":"293","messageId":"294","endLine":12,"endColumn":4},{"ruleId":"278","severity":1,"message":"279","line":31,"column":6,"nodeType":"280","endLine":31,"endColumn":17,"suggestions":"316"},{"ruleId":"317","severity":1,"message":"318","line":45,"column":42,"nodeType":"319","messageId":"320","endLine":45,"endColumn":44},{"ruleId":"317","severity":1,"message":"318","line":53,"column":49,"nodeType":"319","messageId":"320","endLine":53,"endColumn":51},{"ruleId":"299","severity":1,"message":"300","line":57,"column":46,"nodeType":"301","messageId":"302","endLine":57,"endColumn":48},{"ruleId":"299","severity":1,"message":"300","line":66,"column":46,"nodeType":"301","messageId":"302","endLine":66,"endColumn":48},{"ruleId":"299","severity":1,"message":"300","line":76,"column":46,"nodeType":"301","messageId":"302","endLine":76,"endColumn":48},{"ruleId":"299","severity":1,"message":"300","line":7,"column":19,"nodeType":"301","messageId":"302","endLine":7,"endColumn":21},{"ruleId":"288","severity":1,"message":"289","line":16,"column":1,"nodeType":"290","endLine":47,"endColumn":3},{"ruleId":"291","severity":1,"message":"292","line":17,"column":3,"nodeType":"293","messageId":"294","endLine":44,"endColumn":4},"no-native-reassign",["321"],"no-negated-in-lhs",["322"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["323"],"no-unused-vars","'Jumbotron' is defined but never used.","Identifier","unusedVar","'error' is assigned a value but never used.","'setError' is assigned a value but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'FloatingLabel' is defined but never used.","'Modal' is defined but never used.","'Button' is defined but never used.","'getAllCategory' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'generatePublicUrl' is defined but never used.","'Container' is defined but never used.","'show' is assigned a value but never used.","'size' is assigned a value but never used.","'handleClose' is assigned a value but never used.","'modalTitle' is assigned a value but never used.","'btnName' is assigned a value but never used.","'handleSave' is assigned a value but never used.",["321"],["322"],["324"],["325"],"'res' is assigned a value but never used.",["326"],"array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","no-global-assign","no-unsafe-negation",{"desc":"327","fix":"328"},{"desc":"329","fix":"330"},{"desc":"329","fix":"331"},{"desc":"332","fix":"333"},"Update the dependencies array to be: [auth.authenticate, dispatch]",{"range":"334","text":"335"},"Update the dependencies array to be: [dispatch]",{"range":"336","text":"337"},{"range":"338","text":"337"},"Update the dependencies array to be: [dispatch, startDate]",{"range":"339","text":"340"},[1723,1742],"[auth.authenticate, dispatch]",[1352,1354],"[dispatch]",[812,814],[1035,1046],"[dispatch, startDate]"]